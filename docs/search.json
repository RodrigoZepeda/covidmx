[{"path":"https://rodrigozepeda.github.io/covidmx/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 covidmx authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://rodrigozepeda.github.io/covidmx/articles/Instalacion_de_MARIADB.html","id":"instalación-en-osx-mac","dir":"Articles","previous_headings":"Instalación","what":"Instalación en OSX (Mac)","title":"Instalación de MariaDB","text":"Para instalar en OSX la recomendación es primero instalar Homebrew. Para ello puedes abrir tu terminal (en aplicaciones o en la pestaña Terminal de RStudio) y copiar siguiente código dándole ENTER al final: Una vez se haya instalado puedes instalar MariaDB escribiendo en la misma terminal: Para garantizar que MariaDB siempre esté prendida en tu computadora utiliza launchctl con: Finalmente para abrir MariaDB ahí mismo en la terminal:","code":"/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\" brew install mariadb brew services start mariadb sudo mariadb"},{"path":"https://rodrigozepeda.github.io/covidmx/articles/Instalacion_de_MARIADB.html","id":"instalación-en-ubuntu","dir":"Articles","previous_headings":"Instalación","what":"Instalación en Ubuntu","title":"Instalación de MariaDB","text":"Para instalar en Ubuntu abre terminal y actualiza apt: Una vez hayas instalado inicia el servicio de MariaDB: Y para que cada vez que prendes la computadora MariaDB comience sin que le tengas que decir que inicie: Si es la primera vez que estás usando esto te recomiendo correr la configuración de seguridad: Finalmente para abrir MariaDB ahí mismo en la terminal:","code":"sudo apt update && sudo apt install mariadb-server sudo systemctl start mariadb.service sudo systemctl enable mariadb.service sudo mysql_secure_installation sudo mariadb"},{"path":"https://rodrigozepeda.github.io/covidmx/articles/Instalacion_de_MARIADB.html","id":"instalación-en-windows","dir":"Articles","previous_headings":"Instalación","what":"Instalación en Windows","title":"Instalación de MariaDB","text":"Descarga el ejecutable de https://mariadb.org/download. Elige la versión más alta posible que sea preview y donde Windows esté listada como una de las opciones. Una vez descargado inicia el instalador. Acepta la licencia. Selecciona dónde quieres que se almacene (el default está bien). Escribe una contraseña para root. Ahí mismo si estás en un servidor sino sólo en tu computadora, desactiva la opción que permite acceso máquinas remotas. Selecciona la opción para usar UTF-8. Selecciona la opción de instalar como servicio llamado MariaDB. El puerto TCP por default es el 3306. Si lo cambias, anota el nuevo. Selecciona siguiente y termina la instalación. Una vez hayas instalado abre la línea de comandos de MariaDB (commandprompt) como administrador.","code":""},{"path":[]},{"path":"https://rodrigozepeda.github.io/covidmx/articles/Instalacion_de_MARIADB.html","id":"creación-de-usuario","dir":"Articles","previous_headings":"Ajustes para covidmx","what":"Creación de usuario","title":"Instalación de MariaDB","text":"Una vez hayas abierto MARIADB crea un usuario con el nombre que quieras (aquí le pongo usuario) pero tú pon lo que quieras y asígnale una contraseña (aquí le pongo password). Termina de asignarle los permisos: Finalmente armamos una base de datos que se llame COVIDMX (tú ponle como quieras) para usar con el paquete: Finalmente sal de MariaDB:","code":"GRANT ALL ON *.* TO 'usuario'@'localhost' IDENTIFIED BY 'password' WITH GRANT OPTION; FLUSH PRIVILEGES; CREATE DATABASE IF NOT EXISTS covidmx; EXIT;"},{"path":"https://rodrigozepeda.github.io/covidmx/articles/Instalacion_de_MARIADB.html","id":"verificación-de-cambios","dir":"Articles","previous_headings":"Ajustes para covidmx","what":"Verificación de cambios","title":"Instalación de MariaDB","text":"Si quieres verificar que asignaste bien tu usuario dentro de MariaDB puedes hacer para ver si sí está ahí: Por otro lado para verificar que hiciste la tabla puedes hacer","code":"SELECT User FROM mysql.user; SHOW DATABASES;"},{"path":"https://rodrigozepeda.github.io/covidmx/articles/Instalacion_de_MARIADB.html","id":"variables-de-ambiente","dir":"Articles","previous_headings":"Ajustes para covidmx","what":"Variables de ambiente","title":"Instalación de MariaDB","text":"En R para descargar la base de datos necesitas asignar en descarga_datos_abiertos o en read_datos_abiertos el usuario, password y nombre de base de datos cada vez que lo uses la opción sugerida es crear variables ambientales ya sea en cada script: o como variables ambientales en tu archivo .Renviron: Recuerda que para editar el .Renviron desde R puedes hacer usethis::edit_r_environ(), editar y luego reiniciar R.","code":"descarga_datos_abiertos(   user     = \"tu_usuario\",   password = \"tu_password\",   dbname   = \"covidmx\",   ... ) Sys.setenv(\"MariaDB_user\"     =  \"tu_usuario\") Sys.setenv(\"MariaDB_password\" =  \"tu_password\") Sys.setenv(\"MariaDB_dbname\"   =  \"covidmx\")  #Estos cámbialos si sabes lo que estás haciendo son otros argumentos de DBI::dbConnect  Sys.setenv(\"MariaDB_host\"  =  \"localhost\") Sys.setenv(\"MariaDB_group\" =  \"\") Sys.setenv(\"MariaDB_port\"  =  \"\") MariaDB_user     = \"tu_usuario\" MariaDB_password = \"tu_password\" MariaDB_dbname   = \"covidmx\""},{"path":"https://rodrigozepeda.github.io/covidmx/articles/covidmx.html","id":"instalación","dir":"Articles","previous_headings":"","what":"Instalación","title":"Introducción a covidmx","text":"","code":"#install.packages(\"remotes\") remotes::install_github(\"RodrigoZepeda/covidmx\")"},{"path":"https://rodrigozepeda.github.io/covidmx/articles/covidmx.html","id":"descarga-de-datos-de-la-dirección-general-de-epidemiología","dir":"Articles","previous_headings":"","what":"Descarga de datos de la Dirección General de Epidemiología","title":"Introducción a covidmx","text":"NOTA Necesitas tener una instalación de dos cosas: El gestor de bases de datos MariaDB (puedes revisar el artículo respectivo). Un descompresor de archivos zip. En Windows sugiero 7zip; en Linux/Mac/Unix generalmente ya tienes unzip (y si , instálalo) Lo más importante es comenzar descargando la base de datos pública. Esto lo puedes hacer como sigue: La descarga contiene una lista la información de interés está en datos_covid$dats Por default se agregan las etiquetas los datos pues es muy tardado hacerlo: Sin embargo se guardan como una lista en dict para su consulta y uso por las funciones internas: por ejemplo para ver el diccionario de antígeno: De hecho es necesario volver descargar si reinicias tu sesión de R siempre y cuando los hayas guardado en MariaDB (el default). Puedes sólo leer los datos abiertos que ya tienes usando la función read_datos_abiertos.R; Una vez descargados (o leídos), basta componer la base de datos con cualquiera de las funciones para tener una tabla de datos agregada por fecha y entidad.","code":"library(covidmx) library(dplyr) datos_covid <- descarga_datos_abiertos(language = \"Español\") datos_covid$dats %>% dplyr::glimpse() #> Rows: ?? #> Columns: 40 #> Database: mysql  [rockdrigo@localhost:NA/COVID] #> $ FECHA_ACTUALIZACION   <date> 2022-07-05, 2022-07-05, 2022-07-05, 2022-07-05,… #> $ ID_REGISTRO           <chr> \"z3bf80\", \"zze974\", \"z59dea\", \"z5ba5b\", \"z1f605\"… #> $ ORIGEN                <dbl> 2, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, … #> $ SECTOR                <dbl> 12, 6, 12, 12, 12, 12, 3, 12, 12, 12, 12, 12, 12… #> $ ENTIDAD_UM            <chr> \"08\", \"24\", \"07\", \"08\", \"07\", \"19\", \"15\", \"07\", … #> $ SEXO                  <dbl> 2, 1, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, … #> $ ENTIDAD_NAC           <chr> \"08\", \"24\", \"07\", \"10\", \"07\", \"19\", \"15\", \"07\", … #> $ ENTIDAD_RES           <chr> \"08\", \"24\", \"07\", \"08\", \"07\", \"19\", \"15\", \"07\", … #> $ MUNICIPIO_RES         <chr> \"037\", \"035\", \"078\", \"037\", \"024\", \"039\", \"106\",… #> $ TIPO_PACIENTE         <dbl> 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, … #> $ FECHA_INGRESO         <date> 2020-07-28, 2021-02-28, 2020-06-28, 2020-07-31,… #> $ FECHA_SINTOMAS        <date> 2020-07-20, 2021-02-20, 2020-06-24, 2020-07-28,… #> $ FECHA_DEF             <date> -001-11-30, -001-11-30, -001-11-30, -001-11-30,… #> $ INTUBADO              <dbl> 97, 97, 97, 97, 97, 97, 2, 97, 97, 97, 97, 97, 9… #> $ NEUMONIA              <dbl> 2, 99, 2, 2, 99, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… #> $ EDAD                  <dbl> 35, 34, 47, 38, 42, 26, 7, 7, 33, 43, 56, 40, 67… #> $ NACIONALIDAD          <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … #> $ EMBARAZO              <dbl> 97, 2, 97, 97, 97, 97, 2, 2, 97, 97, 2, 2, 2, 2,… #> $ HABLA_LENGUA_INDIG    <dbl> 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, … #> $ INDIGENA              <dbl> 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, … #> $ DIABETES              <dbl> 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, … #> $ EPOC                  <dbl> 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, … #> $ ASMA                  <dbl> 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, … #> $ INMUSUPR              <dbl> 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, … #> $ HIPERTENSION          <dbl> 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, … #> $ OTRA_COM              <dbl> 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, … #> $ CARDIOVASCULAR        <dbl> 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, … #> $ OBESIDAD              <dbl> 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, … #> $ RENAL_CRONICA         <dbl> 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, … #> $ TABAQUISMO            <dbl> 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, … #> $ OTRO_CASO             <dbl> 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, … #> $ TOMA_MUESTRA_LAB      <dbl> 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, … #> $ RESULTADO_LAB         <dbl> 1, 2, 97, 2, 2, 2, 4, 97, 4, 2, 1, 2, 97, 1, 2, … #> $ TOMA_MUESTRA_ANTIGENO <dbl> 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, … #> $ RESULTADO_ANTIGENO    <dbl> 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, … #> $ CLASIFICACION_FINAL   <dbl> 3, 7, 6, 7, 7, 7, 6, 6, 6, 7, 3, 7, 6, 3, 7, 3, … #> $ MIGRANTE              <dbl> 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, … #> $ PAIS_NACIONALIDAD     <chr> \"México\", \"México\", \"México\", \"México\", \"México\"… #> $ PAIS_ORIGEN           <chr> \"97\", \"97\", \"97\", \"97\", \"97\", \"97\", \"97\", \"97\", … #> $ UCI                   <dbl> 97, 97, 97, 97, 97, 97, 2, 97, 97, 97, 97, 97, 9… datos_covid$dict %>% dplyr::glimpse() #> List of 31 #>  $ ASMA                 : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE      : num [1:5] 1 2 97 98 99 #>   ..$ DESCRIPCIÓN: chr [1:5] \"SI\" \"NO\" \"NO APLICA\" \"SE IGNORA\" ... #>  $ CARDIOVASCULAR       : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE      : num [1:5] 1 2 97 98 99 #>   ..$ DESCRIPCIÓN: chr [1:5] \"SI\" \"NO\" \"NO APLICA\" \"SE IGNORA\" ... #>  $ CLASIFICACION_FINAL  : tibble [7 × 3] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE        : num [1:7] 1 2 3 4 5 6 7 #>   ..$ CLASIFICACIÓN: chr [1:7] \"CASO DE COVID-19 CONFIRMADO POR ASOCIACIÓN CLÍNICA EPIDEMIOLÓGICA\" \"CASO DE COVID-19 CONFIRMADO POR COMITÉ DE  DICTAMINACIÓN\" \"CASO DE SARS-COV-2  CONFIRMADO\" \"INVÁLIDO POR LABORATORIO\" ... #>   ..$ DESCRIPCIÓN  : chr [1:7] \"Confirmado por asociación aplica cuando el caso informó ser contacto de un positivo a COVID-19 (y este se encue\"| __truncated__ \"Confirmado por dictaminación solo aplica para defunciones bajo las siguientes condiciones: \\r\\nAl caso no se le\"| __truncated__ \"Confirmado aplica cuando:\\r\\nEl caso tiene muestra de laboratorio o prueba antigénica y resultó positiva  a SAR\"| __truncated__ \"Inválido aplica cuando el caso no tienen asociación clínico epidemiológica, ni dictaminación a COVID-19. Se le \"| __truncated__ ... #>  $ DIABETES             : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE      : num [1:5] 1 2 97 98 99 #>   ..$ DESCRIPCIÓN: chr [1:5] \"SI\" \"NO\" \"NO APLICA\" \"SE IGNORA\" ... #>  $ EMBARAZO             : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE      : num [1:5] 1 2 97 98 99 #>   ..$ DESCRIPCIÓN: chr [1:5] \"SI\" \"NO\" \"NO APLICA\" \"SE IGNORA\" ... #>  $ ENTIDAD_NAC          : tibble [36 × 3] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE_ENTIDAD     : chr [1:36] \"01\" \"02\" \"03\" \"04\" ... #>   ..$ ENTIDAD_FEDERATIVA: chr [1:36] \"AGUASCALIENTES\" \"BAJA CALIFORNIA\" \"BAJA CALIFORNIA SUR\" \"CAMPECHE\" ... #>   ..$ ABREVIATURA       : chr [1:36] \"AS\" \"BC\" \"BS\" \"CC\" ... #>  $ ENTIDAD_RES          : tibble [36 × 3] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE_ENTIDAD     : chr [1:36] \"01\" \"02\" \"03\" \"04\" ... #>   ..$ ENTIDAD_FEDERATIVA: chr [1:36] \"AGUASCALIENTES\" \"BAJA CALIFORNIA\" \"BAJA CALIFORNIA SUR\" \"CAMPECHE\" ... #>   ..$ ABREVIATURA       : chr [1:36] \"AS\" \"BC\" \"BS\" \"CC\" ... #>  $ ENTIDAD_UM           : tibble [36 × 3] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE_ENTIDAD     : chr [1:36] \"01\" \"02\" \"03\" \"04\" ... #>   ..$ ENTIDAD_FEDERATIVA: chr [1:36] \"AGUASCALIENTES\" \"BAJA CALIFORNIA\" \"BAJA CALIFORNIA SUR\" \"CAMPECHE\" ... #>   ..$ ABREVIATURA       : chr [1:36] \"AS\" \"BC\" \"BS\" \"CC\" ... #>  $ EPOC                 : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE      : num [1:5] 1 2 97 98 99 #>   ..$ DESCRIPCIÓN: chr [1:5] \"SI\" \"NO\" \"NO APLICA\" \"SE IGNORA\" ... #>  $ HABLA LENGUA INDIGENA: tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE      : num [1:5] 1 2 97 98 99 #>   ..$ DESCRIPCIÓN: chr [1:5] \"SI\" \"NO\" \"NO APLICA\" \"SE IGNORA\" ... #>  $ HIPERTENSION         : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE      : num [1:5] 1 2 97 98 99 #>   ..$ DESCRIPCIÓN: chr [1:5] \"SI\" \"NO\" \"NO APLICA\" \"SE IGNORA\" ... #>  $ INDIGENA             : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE      : num [1:5] 1 2 97 98 99 #>   ..$ DESCRIPCIÓN: chr [1:5] \"SI\" \"NO\" \"NO APLICA\" \"SE IGNORA\" ... #>  $ INMUSUPR             : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE      : num [1:5] 1 2 97 98 99 #>   ..$ DESCRIPCIÓN: chr [1:5] \"SI\" \"NO\" \"NO APLICA\" \"SE IGNORA\" ... #>  $ INTUBADO             : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE      : num [1:5] 1 2 97 98 99 #>   ..$ DESCRIPCIÓN: chr [1:5] \"SI\" \"NO\" \"NO APLICA\" \"SE IGNORA\" ... #>  $ MUNICIPIO_RES        : tibble [2,501 × 3] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE_MUNICIPIO: chr [1:2501] \"001\" \"002\" \"003\" \"004\" ... #>   ..$ MUNICIPIO      : chr [1:2501] \"AGUASCALIENTES\" \"ASIENTOS\" \"CALVILLO\" \"COSÍO\" ... #>   ..$ CLAVE_ENTIDAD  : chr [1:2501] \"01\" \"01\" \"01\" \"01\" ... #>  $ NACIONALIDAD         : tibble [3 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE      : num [1:3] 1 2 99 #>   ..$ DESCRIPCIÓN: chr [1:3] \"MEXICANA\" \"EXTRANJERA\" \"NO ESPECIFICADO\" #>  $ NEUMONIA             : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE      : num [1:5] 1 2 97 98 99 #>   ..$ DESCRIPCIÓN: chr [1:5] \"SI\" \"NO\" \"NO APLICA\" \"SE IGNORA\" ... #>  $ OBESIDAD             : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE      : num [1:5] 1 2 97 98 99 #>   ..$ DESCRIPCIÓN: chr [1:5] \"SI\" \"NO\" \"NO APLICA\" \"SE IGNORA\" ... #>  $ ORIGEN               : tibble [3 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE      : num [1:3] 1 2 99 #>   ..$ DESCRIPCIÓN: chr [1:3] \"USMER\" \"FUERA DE USMER\" \"NO ESPECIFICADO\" #>  $ OTRA_COMORBILIDAD    : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE      : num [1:5] 1 2 97 98 99 #>   ..$ DESCRIPCIÓN: chr [1:5] \"SI\" \"NO\" \"NO APLICA\" \"SE IGNORA\" ... #>  $ OTRO_CASO            : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE      : num [1:5] 1 2 97 98 99 #>   ..$ DESCRIPCIÓN: chr [1:5] \"SI\" \"NO\" \"NO APLICA\" \"SE IGNORA\" ... #>  $ PACIENTE             : tibble [3 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE      : num [1:3] 1 2 99 #>   ..$ DESCRIPCIÓN: chr [1:3] \"AMBULATORIO\" \"HOSPITALIZADO\" \"NO ESPECIFICADO\" #>  $ RENAL_CRONICA        : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE      : num [1:5] 1 2 97 98 99 #>   ..$ DESCRIPCIÓN: chr [1:5] \"SI\" \"NO\" \"NO APLICA\" \"SE IGNORA\" ... #>  $ RESULTADO_LAB        : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE      : num [1:5] 1 2 3 4 97 #>   ..$ DESCRIPCIÓN: chr [1:5] \"POSITIVO A SARS-COV-2\" \"NO POSITIVO A SARS-COV-2\" \"RESULTADO PENDIENTE\" \"RESULTADO NO ADECUADO\" ... #>  $ RESULTADO_ANTIGENO   : tibble [3 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE      : num [1:3] 1 2 97 #>   ..$ DESCRIPCIÓN: chr [1:3] \"POSITIVO A SARS-COV-2\" \"NEGATIVO A SARS-COV-2\" \"NO APLICA (CASO SIN MUESTRA)\" #>  $ SECTOR               : tibble [14 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE      : num [1:14] 1 2 3 4 5 6 7 8 9 10 ... #>   ..$ DESCRIPCIÓN: chr [1:14] \"CRUZ ROJA\" \"DIF\" \"ESTATAL\" \"IMSS\" ... #>  $ SEXO                 : tibble [3 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE      : num [1:3] 1 2 99 #>   ..$ DESCRIPCIÓN: chr [1:3] \"MUJER\" \"HOMBRE\" \"NO ESPECIFICADO\" #>  $ TABAQUISMO           : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE      : num [1:5] 1 2 97 98 99 #>   ..$ DESCRIPCIÓN: chr [1:5] \"SI\" \"NO\" \"NO APLICA\" \"SE IGNORA\" ... #>  $ TOMA_MUESTRA_ANTIGENO: tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE      : num [1:5] 1 2 97 98 99 #>   ..$ DESCRIPCIÓN: chr [1:5] \"SI\" \"NO\" \"NO APLICA\" \"SE IGNORA\" ... #>  $ TOMA_MUESTRA_LAB     : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE      : num [1:5] 1 2 97 98 99 #>   ..$ DESCRIPCIÓN: chr [1:5] \"SI\" \"NO\" \"NO APLICA\" \"SE IGNORA\" ... #>  $ UCI                  : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CLAVE      : num [1:5] 1 2 97 98 99 #>   ..$ DESCRIPCIÓN: chr [1:5] \"SI\" \"NO\" \"NO APLICA\" \"SE IGNORA\" ... datos_covid$dict$RESULTADO_ANTIGENO #> # A tibble: 3 × 2 #>   CLAVE DESCRIPCIÓN                  #>   <dbl> <chr>                        #> 1     1 POSITIVO A SARS-COV-2        #> 2     2 NEGATIVO A SARS-COV-2        #> 3    97 NO APLICA (CASO SIN MUESTRA) read_datos_abiertos() %>% glimpse() #> Using host localhost #> Using port 8787 #> No olvides desconectar la base con datos_covid$disconnect() cuando termines. #> List of 3 #>  $ dats      :List of 2 #>   ..$ src       :List of 2 #>   .. ..$ con  :Formal class 'MariaDBConnection' [package \"RMariaDB\"] with 7 slots #>   .. ..$ disco: NULL #>   .. ..- attr(*, \"class\")= chr [1:4] \"src_MariaDBConnection\" \"src_dbi\" \"src_sql\" \"src\" #>   ..$ lazy_query:List of 5 #>   .. ..$ x         : 'ident' chr \"covidmx\" #>   .. ..$ vars      : chr [1:40] \"FECHA_ACTUALIZACION\" \"ID_REGISTRO\" \"ORIGEN\" \"SECTOR\" ... #>   .. ..$ group_vars: chr(0)  #>   .. ..$ order_vars: NULL #>   .. ..$ frame     : NULL #>   .. ..- attr(*, \"class\")= chr [1:3] \"lazy_base_remote_query\" \"lazy_base_query\" \"lazy_query\" #>   ..- attr(*, \"class\")= chr [1:5] \"tbl_MariaDBConnection\" \"tbl_dbi\" \"tbl_sql\" \"tbl_lazy\" ... #>  $ disconnect:function ()   #>  $ dict      :List of 31 #>   ..$ ASMA                 : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CARDIOVASCULAR       : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ CLASIFICACION_FINAL  : tibble [7 × 3] (S3: tbl_df/tbl/data.frame) #>   ..$ DIABETES             : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ EMBARAZO             : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ ENTIDAD_NAC          : tibble [36 × 3] (S3: tbl_df/tbl/data.frame) #>   ..$ ENTIDAD_RES          : tibble [36 × 3] (S3: tbl_df/tbl/data.frame) #>   ..$ ENTIDAD_UM           : tibble [36 × 3] (S3: tbl_df/tbl/data.frame) #>   ..$ EPOC                 : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ HABLA LENGUA INDIGENA: tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ HIPERTENSION         : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ INDIGENA             : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ INMUSUPR             : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ INTUBADO             : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ MUNICIPIO_RES        : tibble [2,501 × 3] (S3: tbl_df/tbl/data.frame) #>   ..$ NACIONALIDAD         : tibble [3 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ NEUMONIA             : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ OBESIDAD             : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ ORIGEN               : tibble [3 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ OTRA_COMORBILIDAD    : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ OTRO_CASO            : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ PACIENTE             : tibble [3 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ RENAL_CRONICA        : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ RESULTADO_LAB        : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ RESULTADO_ANTIGENO   : tibble [3 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ SECTOR               : tibble [14 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ SEXO                 : tibble [3 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ TABAQUISMO           : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ TOMA_MUESTRA_ANTIGENO: tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ TOMA_MUESTRA_LAB     : tibble [5 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ UCI                  : tibble [5 × 2] (S3: tbl_df/tbl/data.frame)"},{"path":"https://rodrigozepeda.github.io/covidmx/articles/covidmx.html","id":"casos-incidencia","dir":"Articles","previous_headings":"Descarga de datos de la Dirección General de Epidemiología","what":"Casos (Incidencia)","title":"Introducción a covidmx","text":"Las bases de datos se agregan la lista bajo el nombre default casos. Por ejemplo: El objeto casos por default es un tibble con el que ya puedes operar: Nota que lo que hace es agregar por fecha y por entidad de la unidad médica los casos. Se puede filtar por entidad de la unidad médica seleccionando las entidades de interés: Si se quiere filtrar por entidad de nacimiento y que la fecha sea la de ingreso, por ejemplo: Finalmente, si sólo se desean casos confirmados e inválidos: Nota que por default el programa rellena con ceros lo que se observó. Si quieres cancelar esta opción basta con cambiar fill_zeros = FALSE: Si se desea que los casos vengan agregados (es decir QUINTANA ROO + AGUASCALIENTES) se puede cambiar la opción de group_by_entidad FALSE: La variable edad_cut te permite quedarte sòlo con un grupo de edad o bien definir múltiples. Por ejemplo para quedarte sólo con los casos de 5 25 años: O bien definir grupos de edad de la forma 0-20, 20-60 y 60+ Puedes acumular diferentes bases de datos en la misma lista asignándoles nombres: Hay múltiples opciones permitiendo seleccionar variables específicas de unidades de cuidado intensivo, defunciones y si devolver la tabla como tibble o como conexión de dbplyr MARIADB: Puedes ver la base generada así:","code":"datos_covid <- datos_covid %>% casos() datos_covid$casos %>% head() #> # A tibble: 6 × 5 #>   FECHA_SINTOMAS ENTIDAD_UM       n ENTIDAD_FEDERATIVA   ABREVIATURA #>   <date>         <chr>      <int64> <chr>                <chr>       #> 1 2020-01-01     01               5 AGUASCALIENTES       AS          #> 2 2020-01-01     02               4 BAJA CALIFORNIA      BC          #> 3 2020-01-01     03               4 BAJA CALIFORNIA SUR  BS          #> 4 2020-01-01     05               6 COAHUILA DE ZARAGOZA CL          #> 5 2020-01-01     06               3 COLIMA               CM          #> 6 2020-01-01     08              11 CHIHUAHUA            CH datos_covid %>%    casos(entidades = c(\"QUINTANA ROO\",\"AGUASCALIENTES\")) #> # A tibble: 6 × 5 #>   FECHA_SINTOMAS ENTIDAD_UM       n ENTIDAD_FEDERATIVA ABREVIATURA #>   <date>         <chr>      <int64> <chr>              <chr>       #> 1 2020-01-01     01               5 AGUASCALIENTES     AS          #> 2 2020-01-01     23               7 QUINTANA ROO       QR          #> 3 2020-01-02     23               9 QUINTANA ROO       QR          #> 4 2020-01-03     01               1 AGUASCALIENTES     AS          #> 5 2020-01-03     23              11 QUINTANA ROO       QR          #> 6 2020-01-04     01               2 AGUASCALIENTES     AS datos_covid %>%      casos(entidades    = c(\"QUINTANA ROO\",\"AGUASCALIENTES\"),           entidad_tipo = \"Nacimiento\",           fecha_tipo   = \"Ingreso\") #> # A tibble: 6 × 5 #>   FECHA_INGRESO ENTIDAD_NAC       n ENTIDAD_FEDERATIVA ABREVIATURA #>   <date>        <chr>       <int64> <chr>              <chr>       #> 1 2020-01-01    01                0 AGUASCALIENTES     AS          #> 2 2020-01-01    23                2 QUINTANA ROO       QR          #> 3 2020-01-02    01                4 AGUASCALIENTES     AS          #> 4 2020-01-02    23                2 QUINTANA ROO       QR          #> 5 2020-01-03    01                0 AGUASCALIENTES     AS          #> 6 2020-01-03    23                4 QUINTANA ROO       QR datos_covid %>%      casos(entidades    = c(\"QUINTANA ROO\",\"AGUASCALIENTES\"),           entidad_tipo = \"Nacimiento\",           fecha_tipo   = \"Ingreso\",           tipo_clasificacion = c(\"Confirmados COVID\", \"Invalido\")) #> # A tibble: 6 × 5 #>   FECHA_INGRESO ENTIDAD_NAC       n ENTIDAD_FEDERATIVA ABREVIATURA #>   <date>        <chr>       <int64> <chr>              <chr>       #> 1 2020-01-01    01                0 AGUASCALIENTES     AS          #> 2 2020-01-01    23                0 QUINTANA ROO       QR          #> 3 2020-01-02    01                0 AGUASCALIENTES     AS          #> 4 2020-01-02    23                0 QUINTANA ROO       QR          #> 5 2020-01-03    01                0 AGUASCALIENTES     AS          #> 6 2020-01-03    23                0 QUINTANA ROO       QR datos_covid %>%      casos(entidades    = c(\"QUINTANA ROO\",\"AGUASCALIENTES\"),           entidad_tipo = \"Nacimiento\",           fecha_tipo   = \"Ingreso\",           tipo_clasificacion = c(\"Confirmados COVID\", \"Invalido\"),           fill_zeros = FALSE) #> # A tibble: 6 × 5 #>   FECHA_INGRESO ENTIDAD_NAC       n ENTIDAD_FEDERATIVA ABREVIATURA #>   <date>        <chr>       <int64> <chr>              <chr>       #> 1 2020-01-07    23                1 QUINTANA ROO       QR          #> 2 2020-01-12    23                1 QUINTANA ROO       QR          #> 3 2020-01-27    23                1 QUINTANA ROO       QR          #> 4 2020-02-13    01                1 AGUASCALIENTES     AS          #> 5 2020-02-27    23                1 QUINTANA ROO       QR          #> 6 2020-03-02    01                1 AGUASCALIENTES     AS datos_covid %>%      casos(entidades          = c(\"QUINTANA ROO\",\"AGUASCALIENTES\"),           entidad_tipo       = \"Nacimiento\",           fecha_tipo         = \"Ingreso\",           tipo_clasificacion = c(\"Confirmados COVID\", \"Invalido\"),           group_by_entidad   = FALSE) #> # A tibble: 6 × 2 #>   FECHA_INGRESO       n #>   <date>        <int64> #> 1 2020-01-01          0 #> 2 2020-01-02          0 #> 3 2020-01-03          0 #> 4 2020-01-04          0 #> 5 2020-01-05          0 #> 6 2020-01-06          0 datos_covid %>%    casos(edad_cut = c(5, 25)) #> # A tibble: 6 × 6 #>   FECHA_SINTOMAS EDAD_CAT ENTIDAD_UM       n ENTIDAD_FEDERATIVA ABREVIATURA #>   <date>         <chr>    <chr>      <int64> <chr>              <chr>       #> 1 2020-01-01     (5,25]   01               1 AGUASCALIENTES     AS          #> 2 2020-01-01     (5,25]   02               2 BAJA CALIFORNIA    BC          #> 3 2020-01-01     (5,25]   06               1 COLIMA             CM          #> 4 2020-01-01     (5,25]   08               1 CHIHUAHUA          CH          #> 5 2020-01-01     (5,25]   09              13 CIUDAD DE MÉXICO   DF          #> 6 2020-01-01     (5,25]   11               2 GUANAJUATO         GT datos_covid %>%    casos(edad_cut = c(0, 20, 60, Inf)) #> # A tibble: 6 × 6 #>   FECHA_SINTOMAS EDAD_CAT ENTIDAD_UM       n ENTIDAD_FEDERATIVA ABREVIATURA #>   <date>         <chr>    <chr>      <int64> <chr>              <chr>       #> 1 2020-01-01     (0,20]   01               1 AGUASCALIENTES     AS          #> 2 2020-01-01     (0,20]   02               2 BAJA CALIFORNIA    BC          #> 3 2020-01-01     (0,20]   06               1 COLIMA             CM          #> 4 2020-01-01     (0,20]   08               6 CHIHUAHUA          CH          #> 5 2020-01-01     (0,20]   09              26 CIUDAD DE MÉXICO   DF          #> 6 2020-01-01     (0,20]   11               1 GUANAJUATO         GT datos_covid <- datos_covid %>%    casos(list_name = \"Todos por entidad\") %>%   casos(list_name = \"Todos (nacional)\", group_by_entidad = FALSE) %>%    casos(list_name = \"Defunciones (todos)\", defunciones = TRUE)   message(\"Todos (nacional)\") #> Todos (nacional) datos_covid$`Todos (nacional)` %>% head() #> # A tibble: 6 × 2 #>   FECHA_SINTOMAS       n #>   <date>         <int64> #> 1 2020-01-01         287 #> 2 2020-01-02         233 #> 3 2020-01-03         247 #> 4 2020-01-04         245 #> 5 2020-01-05         349 #> 6 2020-01-06         345  message(\"Todos por entidad\") #> Todos por entidad datos_covid$`Todos por entidad` %>% head() #> # A tibble: 6 × 5 #>   FECHA_SINTOMAS ENTIDAD_UM       n ENTIDAD_FEDERATIVA   ABREVIATURA #>   <date>         <chr>      <int64> <chr>                <chr>       #> 1 2020-01-01     01               5 AGUASCALIENTES       AS          #> 2 2020-01-01     02               4 BAJA CALIFORNIA      BC          #> 3 2020-01-01     03               4 BAJA CALIFORNIA SUR  BS          #> 4 2020-01-01     05               6 COAHUILA DE ZARAGOZA CL          #> 5 2020-01-01     06               3 COLIMA               CM          #> 6 2020-01-01     08              11 CHIHUAHUA            CH  message(\"Defunciones (todos)\") #> Defunciones (todos) datos_covid$`Defunciones (todos)` %>% head() #> # A tibble: 6 × 5 #>   FECHA_SINTOMAS ENTIDAD_UM       n ENTIDAD_FEDERATIVA   ABREVIATURA #>   <date>         <chr>      <int64> <chr>                <chr>       #> 1 2020-01-01     05               1 COAHUILA DE ZARAGOZA CL          #> 2 2020-01-01     09               3 CIUDAD DE MÉXICO     DF          #> 3 2020-01-01     12               1 GUERRERO             GR          #> 4 2020-01-01     13               3 HIDALGO              HG          #> 5 2020-01-01     14               1 JALISCO              JC          #> 6 2020-01-01     15               1 MÉXICO               MC datos_covid <- datos_covid %>%    casos(     #Lista de entidades que deseas     entidades = c(\"AGUASCALIENTES\", \"BAJA CALIFORNIA\", \"BAJA CALIFORNIA SUR\",                       \"CAMPECHE\", \"CHIAPAS\", \"CHIHUAHUA\",\"CIUDAD DE M\\u00c9XICO\",                       \"COAHUILA DE ZARAGOZA\" , \"COLIMA\", \"DURANGO\", \"GUANAJUATO\",                       \"GUERRERO\",\"HIDALGO\", \"JALISCO\", \"M\\u00c9XICO\",                       \"MICHOAC\\u00c1N DE OCAMPO\", \"MORELOS\",\"NAYARIT\",                       \"NUEVO LE\\u00d3N\", \"OAXACA\", \"PUEBLA\", \"QUER\\u00c9TARO\",                       \"QUINTANA ROO\", \"SAN LUIS POTOS\\u00cd\", \"SINALOA\", \"SONORA\",                       \"TABASCO\", \"TAMAULIPAS\", \"TLAXCALA\", \"VERACRUZ DE IGNACIO DE LA LLAVE\",                        \"YUCAT\\u00c1N\", \"ZACATECAS\"),          #Si quieres que los resultados salgan por entidad = TRUE o ya agregados = FALSE     group_by_entidad   = TRUE,          #Selecciona esas entidades a qué tipo de entidad refieren: Unidad Médica, Residencia, Nacimiento     entidad_tipo       = \"Residencia\", #c(\"Unidad M\\u00e9dica\", \"Residencia\", \"Nacimiento\"),          #Selecciona la fecha para la base de datos: Síntomas, Ingreso, Defunción     fecha_tipo         = \"Ingreso\",          #Selecciona todas las variables de clasificación que deseas agregar:     tipo_clasificacion = c(\"Sospechosos\",\"Confirmados COVID\", \"Negativo a COVID\", \"Inválido\",                             \"No realizado\"),          #Selecciona si deseas agrupar por la variable tipo_clasificacion     group_by_tipo_clasificacion = TRUE,          #Selecciona todos los pacientes quieres incluir:     tipo_paciente       = c(\"AMBULATORIO\", \"HOSPITALIZADO\", \"NO ESPECIFICADO\"),          #Selecciona si agrupar por tipo de paciente     group_by_tipo_paciente = TRUE,          #Selecciona todas las opciones de Unidad de Cuidado Intensivo del paciente:     tipo_uci      = c(\"SI\",\"NO\",\"NO APLICA\",\"SE IGNORA\",\"NO ESPECIFICADO\"),          #Selecciona si agrupar por tipo de unidad     group_by_tipo_uci  = TRUE,          #Selecciona los sectores del sistema de salud a incluir     tipo_sector   = c(\"CRUZ ROJA\", \"DIF\", \"ESTATAL\", \"IMSS\", \"IMSS-BIENESTAR\", \"ISSSTE\",                        \"MUNICIPAL\", \"PEMEX\", \"PRIVADA\", \"SEDENA\", \"SEMAR\", \"SSA\",                        \"UNIVERSITARIO\",\"NO ESPECIFICADO\"),          #Selecciona si deseas agrupar por tipo de sector     group_by_tipo_sector = FALSE,          #Selecciona si deseas sólo los que tuvieron defunción     defunciones   = TRUE,          #Selecciona los grupos de edad que deseas incluir en rango     edad_cut      = c(20, 40, 60), #Edades 20-40 y 40-60          #Selecciona si devolver el objeto como tibble     as_tibble     = TRUE,          #Selecciona si rellenar los conteos (n) con ceros cuando no haya observaciones.     fill_zeros    = TRUE,          #Nombre para llamarle en el objeto lista que regresa     list_name     = \"Ejemplo defunciones\",          #Agrupa los resultados además por estado de diabetes y sexo     .grouping_vars = c(\"DIABETES\", \"SEXO\")) datos_covid$`Ejemplo defunciones` %>% head() #> # A tibble: 6 × 14 #>   FECHA_INGRESO DIABETES  SEXO EDAD_CAT ENTIDAD_RES CLASIFICACION_FINAL #>   <date>           <dbl> <dbl> <chr>    <chr>                     <dbl> #> 1 2020-01-01           2     1 (40,60]  30                            7 #> 2 2020-01-02           2     1 (40,60]  30                            7 #> 3 2020-01-02           2     2 (20,40]  11                            7 #> 4 2020-01-02           2     2 (20,40]  26                            7 #> 5 2020-01-02           2     2 (40,60]  22                            5 #> 6 2020-01-03           1     1 (40,60]  05                            7 #> # … with 8 more variables: TIPO_PACIENTE <dbl>, UCI <dbl>, n <int64>, #> #   ENTIDAD_FEDERATIVA <chr>, ABREVIATURA <chr>, CLASIFICACIÓN <chr>, #> #   DESCRIPCION_TIPO_PACIENTE <chr>, DESCRIPCION_TIPO_UCI <chr>"},{"path":"https://rodrigozepeda.github.io/covidmx/articles/covidmx.html","id":"número-de-pruebas","dir":"Articles","previous_headings":"Descarga de datos de la Dirección General de Epidemiología","what":"Número de pruebas","title":"Introducción a covidmx","text":"Para calcular el número de pruebas los argumentos son los mismos que la función de casos con el agregado de que tipo_prueba es un vector donde se seleccionan las pruebas considerar (Antígeno o PCR) y group_by_tipo_prueba agrupa los resultados por tipo de prueba","code":"datos_covid <- datos_covid %>%    numero_pruebas(entidades = c(\"CHIHUAHUA\",\"COAHUILA\"),                  tipo_prueba = c(\"Antigeno\", \"PCR\"),                  group_by_tipo_prueba = TRUE)  datos_covid$numero_pruebas %>% head() #> # A tibble: 6 × 6 #>   FECHA_SINTOMAS ENTIDAD_UM TIPO_PRUEBA       n ENTIDAD_FEDERATIVA   ABREVIATURA #>   <date>         <chr>      <chr>       <int64> <chr>                <chr>       #> 1 2020-01-01     05         PCR               5 COAHUILA DE ZARAGOZA CL          #> 2 2020-01-01     08         PCR               8 CHIHUAHUA            CH          #> 3 2020-01-02     05         PCR               2 COAHUILA DE ZARAGOZA CL          #> 4 2020-01-02     08         PCR               7 CHIHUAHUA            CH          #> 5 2020-01-03     05         PCR               5 COAHUILA DE ZARAGOZA CL          #> 6 2020-01-03     08         PCR              10 CHIHUAHUA            CH datos_covid$numero_pruebas %>% plot_covid(facet_ncol = 2) #> df_variable no fue especificada. Usaremos la columna `n` #> df_covariates no fue especificada. Usaremos `TIPO_PRUEBA`df_covariates no fue especificada. Usaremos `ENTIDAD_FEDERATIVA`"},{"path":"https://rodrigozepeda.github.io/covidmx/articles/covidmx.html","id":"positividad","dir":"Articles","previous_headings":"Descarga de datos de la Dirección General de Epidemiología","what":"Positividad","title":"Introducción a covidmx","text":"Para calcular la positividad la única forma actual es con un tibble. Los argumentos son los mismos que la función de casos con el agregado de que tipo_prueba es un vector donde se seleccionan las pruebas considerar (Antígeno o PCR) y group_by_tipo_prueba agrupa los resultados por tipo de prueba. La variable remove_inconclusive es una booleana (default TRUE) que elimina del denominador de la positividad las pruebas sin resultado o con resultado concluyente. Nota Positividad es la variable más lenta de calcular por ahora. Ten paciencia","code":"datos_covid <- datos_covid %>%    positividad(entidades = c(\"CHIHUAHUA\",\"COAHUILA\"),                  tipo_prueba = c(\"Antigeno\", \"PCR\"),                  group_by_tipo_prueba = TRUE) #> Leyendo la base... #> Calculando PCR... #> Calculando Antigeno... #> Terminando de construir la base #> Terminado  datos_covid$positividad %>% head() #> # A tibble: 6 × 8 #> # Groups:   FECHA_SINTOMAS, ENTIDAD_UM, TIPO_PRUEBA, ENTIDAD_FEDERATIVA, #> #   ABREVIATURA [6] #>   Positividad FECHA_SINTOMAS ENTIDAD_UM TIPO_PRUEBA ENTIDAD_FEDERAT… ABREVIATURA #>         <dbl> <date>         <chr>      <chr>       <chr>            <chr>       #> 1           0 2020-01-01     05         PCR         COAHUILA DE ZAR… CL          #> 2           0 2020-01-01     08         PCR         CHIHUAHUA        CH          #> 3           0 2020-01-02     05         PCR         COAHUILA DE ZAR… CL          #> 4           0 2020-01-02     08         PCR         CHIHUAHUA        CH          #> 5           0 2020-01-03     05         PCR         COAHUILA DE ZAR… CL          #> 6           0 2020-01-03     08         PCR         CHIHUAHUA        CH          #> # … with 2 more variables: n_pruebas <int64>, n_positivos <int64> datos_covid$positividad %>%    plot_covid(facet_ncol = 2,               facet_scale = \"fixed\",              type = \"spline\",              df_variable = \"Positividad\",              df_covariates = c(\"TIPO_PRUEBA\", \"ENTIDAD_FEDERATIVA\"))"},{"path":"https://rodrigozepeda.github.io/covidmx/articles/covidmx.html","id":"case-hospitalization-rate","dir":"Articles","previous_headings":"Descarga de datos de la Dirección General de Epidemiología","what":"Case Hospitalization Rate","title":"Introducción a covidmx","text":"El chr se define como el total de casos confirmados que terminaron hospitalizados entre el total de confirmados: \\[ \\textrm{CHR} = \\frac{\\text{Hospitalizados Confirmados}}{\\text{Todos los confirmados}} \\] lo puedes calcular con chr: Las variables para agrupar son casi las mismas que en casos. Por ejemplo si queremos agrupar el chr en distintas categorías de edad nivel nacional:","code":"datos_covid <- datos_covid %>% chr() #> Calculando los casos totales #> Calculando los casos hospitalizados #> Calculando el chr #> # A tibble: 6 × 5 #>   FECHA_SINTOMAS ENTIDAD_UM ENTIDAD_FEDERATIVA ABREVIATURA `CASE HOSPITALIZATI…` #>   <date>         <chr>      <chr>              <chr>                       <dbl> #> 1 2020-02-19     15         MÉXICO             MC                              0 #> 2 2020-02-22     09         CIUDAD DE MÉXICO   DF                              1 #> 3 2020-02-22     25         SINALOA            SL                              0 #> 4 2020-02-23     09         CIUDAD DE MÉXICO   DF                              0 #> 5 2020-02-25     07         CHIAPAS            CS                              0 #> 6 2020-02-26     09         CIUDAD DE MÉXICO   DF                              1 datos_covid <- datos_covid %>%    chr(     group_by_entidad = FALSE,     edad_cut  = c(seq(0, 85, by = 5), Inf),     list_name = \"CHR_edad_nacional\"   )  #> Calculando los casos totales #> Calculando los casos hospitalizados #> Calculando el chr  datos_covid %>%   plot_covid(type = \"line\", facet_ncol = 4, df_name = \"CHR_edad_nacional\") #> df_variable no fue especificada. Usaremos la columna `CASE HOSPITALIZATION RATE` #> df_covariates no fue especificada. Usaremos `EDAD_CAT` #> Warning: Removed 1076 rows containing missing values (`geom_line()`)."},{"path":"https://rodrigozepeda.github.io/covidmx/articles/covidmx.html","id":"case-fatality-rate","dir":"Articles","previous_headings":"Descarga de datos de la Dirección General de Epidemiología","what":"Case Fatality Rate","title":"Introducción a covidmx","text":"El cfr se define como el total de casos confirmados que terminaron muertos: \\[ \\textrm{CFR} = \\frac{\\text{Defunciones Confirmadas}}{\\text{Todos los confirmados}} \\] lo puedes calcular con cfr: Las variables para agrupar son casi las mismas que en casos. Por ejemplo si queremos agrupar el cfr en distintas categorías de edad nivel nacional:  Podemos también calcular la mortalidad dentro de los hospitalizados y ambulatorios:","code":"datos_covid <- datos_covid %>% cfr() #> Calculando los casos totales #> Calculando las defunciones #> Calculando el cfr #> # A tibble: 6 × 5 #>   FECHA_SINTOMAS ENTIDAD_UM ENTIDAD_FEDERATIVA ABREVIATURA `CASE FATALITY RATE` #>   <date>         <chr>      <chr>              <chr>                      <dbl> #> 1 2020-02-19     15         MÉXICO             MC                             0 #> 2 2020-02-22     09         CIUDAD DE MÉXICO   DF                             0 #> 3 2020-02-22     25         SINALOA            SL                             0 #> 4 2020-02-23     09         CIUDAD DE MÉXICO   DF                             0 #> 5 2020-02-25     07         CHIAPAS            CS                             0 #> 6 2020-02-26     09         CIUDAD DE MÉXICO   DF                             1 datos_covid <- datos_covid %>%    cfr(     entidades = c(\"CIUDAD DE MÉXICO\", \"MÉXICO\"),     group_by_entidad = TRUE,     list_name = \"CFR_CENTRAL\"   )  #> Calculando los casos totales #> Calculando las defunciones #> Calculando el cfr  datos_covid$CFR_CENTRAL %>%   plot_covid(type = \"line\", facet_ncol = 2) #> df_variable no fue especificada. Usaremos la columna `CASE FATALITY RATE` #> df_covariates no fue especificada. Usaremos `ENTIDAD_FEDERATIVA` #> Warning: Removed 103 rows containing missing values (`geom_line()`). datos_covid <- datos_covid %>%    cfr(     tipo_paciente = \"HOSPITALIZADO\",     group_by_tipo_paciente = TRUE,     group_by_entidad       = FALSE,     list_name = \"CFR_HOSPITALIZADO\"   )  #> Calculando los casos totales #> Calculando las defunciones #> Calculando el cfr  datos_covid %>%   plot_covid(df_name = \"CFR_HOSPITALIZADO\", type = \"line\", facet_ncol = 2,              df_variable = \"CASE FATALITY RATE\") #> df_covariates no fue especificada. Usaremos `TIPO_PACIENTE`df_covariates no fue especificada. Usaremos `DESCRIPCION_TIPO_PACIENTE` #> Warning: Removed 53 rows containing missing values (`geom_line()`)."},{"path":"https://rodrigozepeda.github.io/covidmx/articles/covidmx.html","id":"número-efectivo-de-reproducción","dir":"Articles","previous_headings":"Descarga de datos de la Dirección General de Epidemiología","what":"Número efectivo de reproducción","title":"Introducción a covidmx","text":"El número efectivo de reproducción se estima mediante la función EpiEstim::estimate_R para la cual es necesario especificar el método y el intervalo serial como en este ejemplo. Podemos estimar el número nivel nacional partir de 2022: O bien por entidad sólo con los confirmados covid:","code":"datos_covid <- datos_covid %>%    rt(group_by_entidad = FALSE,       min_date = as.Date(\"2022/01/01\", format = \"%Y/%m/%d\")) #> # A tibble: 6 × 14 #>   t_start t_end `Mean(R)` `Std(R)` `Quantile.0.025(R)` `Quantile.0.05(R)` #>     <dbl> <dbl>     <dbl>    <dbl>               <dbl>              <dbl> #> 1       2     8      1.72  0.00238                1.72               1.72 #> 2       3     9      1.47  0.00198                1.47               1.47 #> 3       4    10      1.38  0.00177                1.37               1.37 #> 4       5    11      1.29  0.00162                1.28               1.29 #> 5       6    12      1.21  0.00150                1.20               1.20 #> 6       7    13      1.14  0.00141                1.14               1.14 #> # … with 8 more variables: `Quantile.0.25(R)` <dbl>, `Median(R)` <dbl>, #> #   `Quantile.0.75(R)` <dbl>, `Quantile.0.95(R)` <dbl>, #> #   `Quantile.0.975(R)` <dbl>, FECHA_SINTOMAS_start <date>, #> #   FECHA_SINTOMAS_end <date>, FECHA_SINTOMAS <date> datos_covid <- datos_covid %>%    rt(tipo_clasificacion = \"Confirmados COVID\",      list_name = \"RT_confirmados_COVID\")  datos_covid$RT_confirmados_COVID %>%   plot_covid(df_date_index = \"FECHA_SINTOMAS\", df_variable = \"Mean(R)\",              df_covariates = \"ENTIDAD_FEDERATIVA\")"},{"path":"https://rodrigozepeda.github.io/covidmx/articles/covidmx.html","id":"desconexión-de-mariadb","dir":"Articles","previous_headings":"Descarga de datos de la Dirección General de Epidemiología","what":"Desconexión de MariaDB","title":"Introducción a covidmx","text":"Una vez que terminaste de trabajar con la base original en MariaDB deconecta el pointer haciendo:","code":"datos_covid$disconnect()"},{"path":"https://rodrigozepeda.github.io/covidmx/articles/covidmx.html","id":"datos-de-variantes-gisaid","dir":"Articles","previous_headings":"","what":"Datos de variantes (GISAID)","title":"Introducción a covidmx","text":"Para descargar las variantes reportadas por la publicación diaria en Github del reporte nacional en RodrigoZepeda/VariantesCovid partir de las variantes de GISAID puedes hacer: Los datos se ven así: Por default baja nacional pero también puedes usar “cdmx”: olvides citar GISAID así como la publicación diaria en RodrigoZepeda/VariantesCovid si las usas.","code":"variantes_covid <- descarga_datos_variantes_GISAID() #> Estoy descargando datos de: #> https://raw.githubusercontent.com/RodrigoZepeda/VariantesCovid/main/tablas/Proporcion_variantes_nacional.csv variantes_covid %>% head() #> # A tibble: 6 × 7 #>   variant     semana   ano     n  freq Actualizacion       Fuente                #>   <chr>        <int> <int> <int> <dbl> <dttm>              <chr>                 #> 1 VOI Epsilon     28  2020     1     1 2022-07-11 13:35:09 GISAID: https://www.… #> 2 VOI Epsilon     38  2020     1     1 2022-07-11 13:35:09 GISAID: https://www.… #> 3 VOC Delta       39  2020     1     1 2022-07-11 13:35:09 GISAID: https://www.… #> 4 VOI Epsilon     46  2020     1     1 2022-07-11 13:35:09 GISAID: https://www.… #> 5 VOI Epsilon     47  2020     2     1 2022-07-11 13:35:09 GISAID: https://www.… #> 6 VOI Epsilon     48  2020     5     1 2022-07-11 13:35:09 GISAID: https://www.… variantes_covid <- descarga_datos_variantes_GISAID(\"cdmx\") #> Estoy descargando datos de: #> https://raw.githubusercontent.com/RodrigoZepeda/VariantesCovid/main/tablas/Proporcion_variantes_cdmx.csv"},{"path":"https://rodrigozepeda.github.io/covidmx/articles/covidmx.html","id":"datos-de-ocupación-hospitalaria-red-irag","dir":"Articles","previous_headings":"","what":"Datos de ocupación hospitalaria (Red IRAG)","title":"Introducción a covidmx","text":"Puedes descargar los datos de la Red IRAG de ocupación hospitalaria nivel estatal o nivel unidad médica mediante descarga_datos_ocupacion_hospitalaria. Estos se obtienen de la publicación diaria en RodrigoZepeda/CapacidadHospitalariaMX. Los cuales se ven así:  O bien por unidad médica: que se ven así: olvides citar RED IRAG así como la publicación diaria en RodrigoZepeda/CapacidadHospitalariaMX si las usas.","code":"estatales <- descarga_datos_ocupacion_hospitalaria() #> Estoy descargando datos de: #> https://media.githubusercontent.com/media/RodrigoZepeda/CapacidadHospitalariaMX/master/processed/HospitalizacionesMX_estatal.csv estatales %>% plot_covid(df_covariates = \"estado\") #> df_variable no fue especificada. Usaremos la columna `hospitalizados_percent` unidad_medica <- descarga_datos_ocupacion_hospitalaria(nivel = \"Unidad Médica\") #> Estoy descargando datos de: #> https://media.githubusercontent.com/media/RodrigoZepeda/CapacidadHospitalariaMX/master/processed/HospitalizacionesMX_unidad_medica.csv unidad_medica %>% head() #> # A tibble: 6 × 9 #>   unidad_medica       estado institucion clues hospitalizados_… ventilacion_per… #>   <chr>               <chr>  <chr>       <chr>            <dbl>            <dbl> #> 1 Hospital Regional … México SSA/CC      MCSS…              100               17 #> 2 Hospital Juárez de… Ciuda… SSA/CC      DFSS…              100               89 #> 3 Instituto Nacional… Ciuda… SSA/CC      DFSS…              100                0 #> 4 Instituto Nacional… Ciuda… SSA/CC      DFSS…              100               94 #> 5 Instituto Nacional… Ciuda… SSA/CC      DFSS…              100               50 #> 6 Instituto Nacional… Ciuda… SSA/CC      DFSS…              100               10 #> # … with 3 more variables: uci_y_ventilacion_percent <dbl>, fecha <date>, #> #   actualizacion <dttm>"},{"path":"https://rodrigozepeda.github.io/covidmx/articles/covidmx.html","id":"gráficas","dir":"Articles","previous_headings":"","what":"Gráficas","title":"Introducción a covidmx","text":"Para graficar puedes usar la función plot_covid por default grafica lo que està en datos_covid$casos  pero puedes pedir otra con el eje x más limpio:  Para visualizar un suavizamiento con splines cambia el type y dale las opciones que darías geom_spline:  Puedes visualizar hasta dos covariables la vez con df_covariates y decirle cuál graficar con df_variable:","code":"datos_covid %>% plot_covid() #> df_variable no fue especificada. Usaremos la columna `n` #> df_covariates no fue especificada. Usaremos `ENTIDAD_FEDERATIVA` datos_covid %>% plot_covid(\"Todos (nacional)\",                             date_break_format = \"6 months\",                            date_labels_format = \"%m/%y\") #> df_variable no fue especificada. Usaremos la columna `n` #> datos_covid %>% plot_covid(\"Todos (nacional)\", type = \"spline\", spar = 0.5) #> df_variable no fue especificada. Usaremos la columna `n` #> datos_covid %>%    plot_covid(\"Ejemplo defunciones\",               df_variable = \"n\",               df_covariates = c(\"SEXO\",\"ENTIDAD_FEDERATIVA\"),              type = \"area\")"},{"path":"https://rodrigozepeda.github.io/covidmx/articles/covidmx.html","id":"otras-funciones-de-interés","dir":"Articles","previous_headings":"","what":"Otras funciones de interés","title":"Introducción a covidmx","text":"Faltan por desarrollar las siguientes funciones:","code":"rt()                        #Effective reproductive number"},{"path":"https://rodrigozepeda.github.io/covidmx/authors.html","id":null,"dir":"","previous_headings":"","what":"Autores","title":"Autores y Citas","text":"Rodrigo Zepeda-Tello. Autor-, mantenedor-.","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/authors.html","id":"citation","dir":"","previous_headings":"","what":"Cita","title":"Autores y Citas","text":"Zepeda-Tello R (2022). covidmx: COVID-19 Dataset Analysis Mexico. https://github.com/RodrigoZepeda/covidmx, https://rodrigozepeda.github.io/covidmx/.","code":"@Manual{,   title = {covidmx: COVID-19 Dataset Analysis for Mexico},   author = {Rodrigo Zepeda-Tello},   year = {2022},   note = {https://github.com/RodrigoZepeda/covidmx, https://rodrigozepeda.github.io/covidmx/}, }"},{"path":"https://rodrigozepeda.github.io/covidmx/index.html","id":"covidmx-","dir":"","previous_headings":"","what":"Análisis de COVID-19 para México","title":"Análisis de COVID-19 para México","text":"Descarga, etiqueta y datos abiertos de COVID-19 en México. El propósito de este paquete es hacer la descarga, análisis y graficación de manera rápida para que tú tengas que preocuparte por bajar el archivo tiempo, agrupar funciones o realizar visualizaciones sino en lo importante: analizar la información.","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/index.html","id":"instalación","dir":"","previous_headings":"","what":"Instalación","title":"Análisis de COVID-19 para México","text":"","code":"remotes::install_github(\"RodrigoZepeda/covidmx\")"},{"path":"https://rodrigozepeda.github.io/covidmx/index.html","id":"uso","dir":"","previous_headings":"","what":"Uso","title":"Análisis de COVID-19 para México","text":"Puedes descargar la información de variantes de GISAID de la publicación de Github, ocupación hospitalaria de RED IRAG partir del Github y datos abiertos de la SSA todo con los siguientes comandos. Nota Para usar los datos abiertos de la DGE te sugiero instalar también MariaDB (ver guía) y si estás en Windows también instala 7-zip. Gráfica con los casos de SINAVE de los datos abiertos de las 32 entidades cada una de ellas variando por color. Nota olvides citar GISAID, RED IRAG o SSA y las publicaciones asociadas además del paquete.","code":"library(covidmx)  #Datos de variantes (cdmx o nacional) variantes   <- descarga_datos_variantes_GISAID(\"nacional\")  #Datos de ocupación hopsitalaria ('Estatal' o 'Unidad Médica') ocupacion   <- descarga_datos_ocupacion_hospitalaria(\"Estatal\")  #Descarga datos abiertos de covid, guarda en MARIADB y te da una conexión datos_covid <- descarga_datos_abiertos(     user      = Sys.getenv(\"MariaDB_user\"),     password  = Sys.getenv(\"MariaDB_password\"),     dbname    = Sys.getenv(\"MariaDB_dbname\"),     host      = Sys.getenv(\"MariaDB_host\"),     group     = Sys.getenv(\"MariaDB_group\"),     port      = Sys.getenv(\"MariaDB_port\") )   #Una vez descargados la próxima vez que los quieras basta con leerlos # datos_covid <- read_datos_abiertos()   #Calcula los casos (totales) por entidad y devuelve un tibble datos_covid <- datos_covid %>% casos()  #Calcula la cantidad de pruebas realizadas datos_covid <- datos_covid %>% numero_pruebas()  #Calcula la positividad datos_covid <- datos_covid %>% positividad()  #Calcula el case fatality rate datos_covid <- datos_covid %>% cfr()  #Calcula el case hospitalization rate datos_covid <- datos_covid %>% chr()  #Estimación del número efectivo de reproducción datos_covid <- datos_covid %>% rt()  #¡Grafica! datos_covid %>% plot_covid()"},{"path":"https://rodrigozepeda.github.io/covidmx/index.html","id":"casos-opciones-de-lectura-de-datos-abiertos","dir":"","previous_headings":"","what":"Casos (opciones de lectura de datos abiertos)","title":"Análisis de COVID-19 para México","text":"Todas las opciones de casos:","code":"datos_covid %>%    casos(     #Lista de entidades que deseas     entidades = c(\"AGUASCALIENTES\", \"BAJA CALIFORNIA\",                    \"BAJA CALIFORNIA SUR\",\"CAMPECHE\", \"CHIAPAS\",                    \"CHIHUAHUA\",\"CIUDAD DE M\\u00c9XICO\",                   \"COAHUILA DE ZARAGOZA\" , \"COLIMA\", \"DURANGO\",                    \"GUANAJUATO\", \"GUERRERO\",\"HIDALGO\", \"JALISCO\",                    \"M\\u00c9XICO\", \"MICHOAC\\u00c1N DE OCAMPO\",                    \"MORELOS\",\"NAYARIT\", \"NUEVO LE\\u00d3N\", \"OAXACA\",                    \"PUEBLA\", \"QUER\\u00c9TARO\", \"QUINTANA ROO\",                    \"SAN LUIS POTOS\\u00cd\", \"SINALOA\", \"SONORA\",                   \"TABASCO\", \"TAMAULIPAS\", \"TLAXCALA\",                    \"VERACRUZ DE IGNACIO DE LA LLAVE\",                    \"YUCAT\\u00c1N\", \"ZACATECAS\"),          #Si quieres que los resultados salgan por entidad = TRUE o ya agregados = FALSE     group_by_entidad    = TRUE,          #Selecciona esas entidades a qué tipo de entidad refieren: Unidad Médica,      #Residencia o Nacimiento     entidad_tipo        = \"Residencia\",           #Selecciona la fecha para la base de datos: Síntomas, Ingreso, Defunción     fecha_tipo          = \"Ingreso\",           #Selecciona todas las variables de clasificación que deseas agregar:     tipo_clasificacion  = c(\"Sospechosos\",\"Confirmados COVID\",                              \"Negativo a COVID\", \"Inválido\",                              \"No realizado\"),          #Selecciona si deseas agrupar por la variable tipo_clasificacion     group_by_tipo_clasificacion = TRUE,          #Selecciona todos los pacientes quieres incluir:     tipo_paciente      = c(\"AMBULATORIO\", \"HOSPITALIZADO\",                             \"NO ESPECIFICADO\"),          #Selecciona si agrupar por tipo de paciente     group_by_tipo_paciente = TRUE,          #Selecciona todas las opciones de Unidad de Cuidado Intensivo     #del paciente:     tipo_uci           = c(\"SI\",\"NO\",\"NO APLICA\",\"SE IGNORA\",                            \"NO ESPECIFICADO\"),          #Selecciona si agrupar por tipo de unidad     group_by_tipo_uci  = TRUE,          #Selecciona los sectores del sistema de salud a incluir     tipo_sector   = c(\"CRUZ ROJA\", \"DIF\", \"ESTATAL\", \"IMSS\",                        \"IMSS-BIENESTAR\", \"ISSSTE\",                        \"MUNICIPAL\", \"PEMEX\", \"PRIVADA\",                        \"SEDENA\", \"SEMAR\", \"SSA\",                        \"UNIVERSITARIO\",\"NO ESPECIFICADO\"),          #Selecciona si deseas agrupar por tipo de sector     group_by_tipo_sector = FALSE,          #Selecciona si deseas sólo los que tuvieron defunción     defunciones   = TRUE,          #Selecciona los grupos de edad que deseas incluir en rango     edad_cut      = c(20, 40, 60), #Edades 20-40 y 40-60          #Selecciona si devolver el objeto como tibble     as_tibble     = TRUE,          #Selecciona si rellenar los conteos (n) con ceros      #cuando no haya observaciones.     fill_zeros    = TRUE,          #Nombre para llamarle en el objeto lista que regresa     list_name     = \"Ejemplo defunciones\",          #Otras variables para agrupar no incluidas     .grouping_vars = c(\"DIABETES\", \"SEXO\"))      #> # A tibble:  #>    FECHA_INGRESO DIABETES  SEXO EDAD_CAT ENTIDAD_RES CLASIFICACION_FINAL #>    <date>           <dbl> <dbl> <chr>    <chr>                     <dbl> #>  1 2020-01-01           2     1 (40,60]  30                            7 #>  2 2020-01-02           2     1 (40,60]  30                            7 #>  3 2020-01-02           2     2 (20,40]  11                            7 #>  4 2020-01-02           2     2 (20,40]  26                            7 #>  5 2020-01-02           2     2 (40,60]  22                            5 #>  6 2020-01-03           1     1 (40,60]  05                            7 #>  7 2020-01-03           1     2 (40,60]  26                            7 #>  8 2020-01-03           1     2 (40,60]  28                            7 #>  9 2020-01-03           2     1 (40,60]  15                            6 #> 10 2020-01-03           2     2 (40,60]  13                            7 #> 11 2020-01-04           2     1 (20,40]  05                            7 #> 12 2020-01-04           2     2 (40,60]  21                            7 #> 13 2020-01-05           1     1 (40,60]  30                            7 #> 14 2020-01-05           1     2 (40,60]  09                            5 #> 15 2020-01-05           2     2 (20,40]  26                            6 #> 16 2020-01-05           2     2 (40,60]  28                            7 #> 17 2020-01-06           1     1 (40,60]  02                            7 #> 18 2020-01-06           1     2 (40,60]  15                            7 #> 19 2020-01-06           2     1 (40,60]  08                            6 #> 20 2020-01-06           2     1 (40,60]  09                            7 #> # … with 8 more variables: TIPO_PACIENTE <dbl>, UCI <dbl>, n <int64>, #> #   ENTIDAD_FEDERATIVA <chr>, ABREVIATURA <chr>, CLASIFICACIÓN <chr>, #> #   DESCRIPCION_TIPO_PACIENTE <chr>, DESCRIPCION_TIPO_UCI <chr>"},{"path":"https://rodrigozepeda.github.io/covidmx/reference/casos.html","id":null,"dir":"Reference","previous_headings":"","what":"CASOS — casos","title":"CASOS — casos","text":"casos Calcula el numero de casos registrados por fecha agrupando (o sin hacerlo) por covariables.","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/casos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"CASOS — casos","text":"","code":"casos(   datos_covid = NULL,   entidades = c(\"AGUASCALIENTES\", \"BAJA CALIFORNIA\", \"BAJA CALIFORNIA SUR\", \"CAMPECHE\",     \"CHIAPAS\", \"CHIHUAHUA\", \"CIUDAD DE MÉXICO\", \"COAHUILA DE ZARAGOZA\", \"COLIMA\",     \"DURANGO\", \"GUANAJUATO\", \"GUERRERO\", \"HIDALGO\", \"JALISCO\", \"MÉXICO\",     \"MICHOACÁN DE OCAMPO\", \"MORELOS\", \"NAYARIT\", \"NUEVO LEÓN\", \"OAXACA\", \"PUEBLA\",     \"QUERÉTARO\", \"QUINTANA ROO\", \"SAN LUIS POTOSÍ\", \"SINALOA\", \"SONORA\", \"TABASCO\",     \"TAMAULIPAS\", \"TLAXCALA\", \"VERACRUZ DE IGNACIO DE LA LLAVE\", \"YUCATÁN\", \"ZACATECAS\"),   group_by_entidad = TRUE,   entidad_tipo = c(\"Unidad Medica\", \"Residencia\", \"Nacimiento\"),   fecha_tipo = c(\"Sintomas\", \"Ingreso\", \"Defuncion\"),   tipo_clasificacion = c(\"Sospechosos\", \"Confirmados COVID\", \"Negativo a COVID\",     \"Inválido\", \"No realizado\"),   group_by_tipo_clasificacion = FALSE,   tipo_paciente = c(\"AMBULATORIO\", \"HOSPITALIZADO\", \"NO ESPECIFICADO\"),   group_by_tipo_paciente = FALSE,   tipo_uci = c(\"SI\", \"NO\", \"NO APLICA\", \"SE IGNORA\", \"NO ESPECIFICADO\"),   group_by_tipo_uci = FALSE,   tipo_sector = c(\"CRUZ ROJA\", \"DIF\", \"ESTATAL\", \"IMSS\", \"IMSS-BIENESTAR\", \"ISSSTE\",     \"MUNICIPAL\", \"PEMEX\", \"PRIVADA\", \"SEDENA\", \"SEMAR\", \"SSA\", \"UNIVERSITARIO\",     \"NO ESPECIFICADO\"),   group_by_tipo_sector = FALSE,   defunciones = FALSE,   edad_cut = NULL,   as_tibble = TRUE,   fill_zeros = as_tibble,   list_name = \"casos\",   .grouping_vars = c() )"},{"path":"https://rodrigozepeda.github.io/covidmx/reference/casos.html","id":"argumentos","dir":"Reference","previous_headings":"","what":"Argumentos","title":"CASOS — casos","text":"datos_covid data available automatically downloads COVID-19 information. entidades Vector con las entidades de las unidades medicas analizar. Opciones: AGUASCALIENTES, BAJA CALIFORNIA, BAJA CALIFORNIA SUR, CAMPECHE, CHIAPAS, CHIHUAHUA, CIUDAD DE MEXICO, COAHUILA DE ZARAGOZA , COLIMA, DURANGO, GUANAJUATO, GUERRERO, HIDALGO, JALISCO, MEXICO, MICHOACAN DE OCAMPO, MORELOS,NAYARIT NUEVO LEON, OAXACA ,PUEBLA, QUERETARO,QUINTANA ROO, SAN LUIS POTOSI, SINALOA, SONORA, TABASCO, TAMAULIPAS,TLAXCALA, VERACRUZ DE IGNACIO DE LA LLAVE, YUCATAN, ZACATECAS group_by_entidad Si junta las entidades en una sola o bien las muestra por separado sin agrupar. entidad_tipo Selecciona Unidad Medica, Nacimiento o Residencia. por default incluye Unidad Medica fecha_tipo Selecciona Ingreso, Sintomas o Defuncion por default incluye fecha de Sintomas tipo_clasificacion Vector con el tipo de clasificaciones incluir: Sospechosos,Confirmados COVID, Negativo COVID, Inv\\u00e1lido, realizado group_by_tipo_clasificacion Boolean determinando si regresa la base con cada entrada agrupada por tipo de clasificación (es decir cada fecha se generan tantos observaciones como grupos de tipo de clasificación) tipo_paciente Vector con el tipo de pacientes incluir. Opciones: AMBULATORIO, HOSPITALIZADO, ESPECIFICADO group_by_tipo_paciente Boolean determinando si regresa la base con cada entrada agrupada por tipo de paciente (es decir cada fecha se generan tantos observaciones como grupos de tipo de paciente) tipo_uci Vector con el tipo de valores para Unidad de Cuidado Intensivo incluir: SI,,APLICA,SE IGNORA,ESPECIFICADO group_by_tipo_uci Boolean determinando si regresa la base con cada entrada agrupada por tipo de uci (es decir cada fecha se generan tantos observaciones como grupos de tipo de uci) tipo_sector Vector con los sectores del sistema de salud incluir: CRUZ ROJA,DIF,ESTATAL,IMSS,IMSS-BIENESTAR,ISSSTE, MUNICIPAL,PEMEX, PRIVADA,SEDENA,SEMAR,SSA, UNIVERSITARIO,ESPECIFICADO. group_by_tipo_sector Boolean determinando si regresa la base con cada entrada agrupada por tipo de sector (es decir cada fecha se generan tantos observaciones como grupos de tipo de sector) defunciones Boolean si incluir sólo defunciones TRUE o todos FALSE. edad_cut Vector con secuencia de edades para hacer grupos. Por ejemplo edad_cut = c(0, 10, Inf) arma dos grupos de edad de 0 10 y de 10 infinito o bien edad_cut = c(15, 20) deja sólo los registros entre 15 y 20 años. Por default es NULL as_tibble Regresar como tibble el resultado. En caso de que as_tibble sea FALSE se devuelve como conexion en MARIADB. fill_zeros En caso de que el resultado sea un tibble regresa observaciones para todas las combinaciones de variables incluyendo como 0 donde se observaron casos. En caso contrario se incluyen las filas donde se observaron casos. list_name Asigna un nombre en la lista de datos la base generada .grouping_vars Vector de variables adicionales de agrupacion de los conteos","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/casos.html","id":"valor","dir":"Reference","previous_headings":"","what":"Valor","title":"CASOS — casos","text":"Appends la lista de datos_covid una nueva entrada de nombre list_name (default: casos) con una base de datos (tibble o dbConnection) con los resultados agregados. casos - Base de datos generara con los datos agregados (el nombre cambia si se usa list_name). dict - Diccionario de datos dats - Datos originales (conexion DB) disconnect  - Función para desconectarte de DB","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/casos.html","id":"detalles","dir":"Reference","previous_headings":"","what":"Detalles","title":"CASOS — casos","text":"Por default calcula el total de casos. official product / este es un producto oficial","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/casos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Ejemplos","title":"CASOS — casos","text":"","code":"if (FALSE) { datos_covid <- descarga_datos_abiertos(language = \"Espanol\")  #Casos a nivel nacional datos_covid <- datos_covid %>% casos() head(datos_covid$casos)  #Defunciones nacional defunciones <- datos_covid %>% casos(defunciones = TRUE, list_name = \"Defunciones\")  #Positivos en Jalisco y Colima casos_col_jal <- datos_covid %>%                     casos(entidades = c(\"JALISCO\",\"COLIMA\"), list_name = \"Jaliscolima\")  #Agrupando casos por tipo de clasificacion confirmados <- datos_covid %>%     casos(entidades = c(\"JALISCO\",\"COLIMA\"),           group_by_tipo_clasificacion = TRUE, list_name = \"Jaliscolima2\")  #Regresa la suma de los de COLIMA + JALISCO casos_col_jal <- datos_covid %>%     casos(entidades = c(\"JALISCO\",\"COLIMA\"),           group_by_tipo_clasificacion = TRUE,           tipo_paciente = c(\"AMBULATORIO\", \"HOSPITALIZADO\"),           group_by_tipo_paciente = TRUE,           list_name = \"Jalisco + colima\")  #Si deseas agrupar por una variable que no este en las opciones casos_col_jal <- datos_covid %>%     casos(entidades = c(\"JALISCO\",\"COLIMA\"),           group_by_tipo_clasificacion = TRUE,           tipo_paciente = c(\"AMBULATORIO\", \"HOSPITALIZADO\"),           group_by_tipo_paciente = TRUE,           list_name = \"Jalisco + colima diabetes\",           .grouping_vars = c(\"DIABETES\")) }"},{"path":"https://rodrigozepeda.github.io/covidmx/reference/cfr.html","id":null,"dir":"Reference","previous_headings":"","what":"Case Fatality Rate (CFR) — cfr","title":"Case Fatality Rate (CFR) — cfr","text":"chr Calcula la proporción de enfermos que fallecen sobre todos los enfermos confirmados en distintas categorías (residencia / edad / etc)","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/cfr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"Case Fatality Rate (CFR) — cfr","text":"","code":"cfr(   datos_covid = NULL,   entidades = c(\"AGUASCALIENTES\", \"BAJA CALIFORNIA\", \"BAJA CALIFORNIA SUR\", \"CAMPECHE\",     \"CHIAPAS\", \"CHIHUAHUA\", \"CIUDAD DE MÉXICO\", \"COAHUILA DE ZARAGOZA\", \"COLIMA\",     \"DURANGO\", \"GUANAJUATO\", \"GUERRERO\", \"HIDALGO\", \"JALISCO\", \"MÉXICO\",     \"MICHOACÁN DE OCAMPO\", \"MORELOS\", \"NAYARIT\", \"NUEVO LEÓN\", \"OAXACA\", \"PUEBLA\",     \"QUERÉTARO\", \"QUINTANA ROO\", \"SAN LUIS POTOSÍ\", \"SINALOA\", \"SONORA\", \"TABASCO\",     \"TAMAULIPAS\", \"TLAXCALA\", \"VERACRUZ DE IGNACIO DE LA LLAVE\", \"YUCATÁN\", \"ZACATECAS\"),   group_by_entidad = TRUE,   entidad_tipo = c(\"Unidad Medica\", \"Residencia\", \"Nacimiento\"),   fecha_tipo = c(\"Sintomas\", \"Ingreso\", \"Defuncion\"),   tipo_uci = c(\"SI\", \"NO\", \"NO APLICA\", \"SE IGNORA\", \"NO ESPECIFICADO\"),   group_by_tipo_uci = FALSE,   tipo_clasificacion = c(\"Confirmados COVID\"),   group_by_tipo_clasificacion = FALSE,   tipo_paciente = c(\"AMBULATORIO\", \"HOSPITALIZADO\", \"NO ESPECIFICADO\"),   group_by_tipo_paciente = FALSE,   tipo_sector = c(\"CRUZ ROJA\", \"DIF\", \"ESTATAL\", \"IMSS\", \"IMSS-BIENESTAR\", \"ISSSTE\",     \"MUNICIPAL\", \"PEMEX\", \"PRIVADA\", \"SEDENA\", \"SEMAR\", \"SSA\", \"UNIVERSITARIO\",     \"NO ESPECIFICADO\"),   group_by_tipo_sector = FALSE,   edad_cut = NULL,   fill_NA = TRUE,   list_name = \"case fatality rate\",   .grouping_vars = c() )"},{"path":"https://rodrigozepeda.github.io/covidmx/reference/cfr.html","id":"argumentos","dir":"Reference","previous_headings":"","what":"Argumentos","title":"Case Fatality Rate (CFR) — cfr","text":"datos_covid data available automatically downloads COVID-19 information. entidades Vector con las entidades de las unidades medicas analizar. Opciones: AGUASCALIENTES, BAJA CALIFORNIA, BAJA CALIFORNIA SUR, CAMPECHE, CHIAPAS, CHIHUAHUA, CIUDAD DE MEXICO, COAHUILA DE ZARAGOZA , COLIMA, DURANGO, GUANAJUATO, GUERRERO, HIDALGO, JALISCO, MEXICO, MICHOACAN DE OCAMPO, MORELOS,NAYARIT NUEVO LEON, OAXACA ,PUEBLA, QUERETARO,QUINTANA ROO, SAN LUIS POTOSI, SINALOA, SONORA, TABASCO, TAMAULIPAS,TLAXCALA, VERACRUZ DE IGNACIO DE LA LLAVE, YUCATAN, ZACATECAS group_by_entidad Si junta las entidades en una sola o bien las muestra por separado sin agrupar. entidad_tipo Selecciona Unidad Medica, Nacimiento o Residencia. por default incluye Unidad Medica fecha_tipo Selecciona Ingreso, Sintomas o Defuncion por default incluye fecha de Sintomas tipo_uci Vector con el tipo de valores para Unidad de Cuidado Intensivo incluir: SI,,APLICA,SE IGNORA,ESPECIFICADO group_by_tipo_uci Boolean determinando si regresa la base con cada entrada agrupada por tipo de uci (es decir cada fecha se generan tantos observaciones como grupos de tipo de uci) tipo_clasificacion Vector con el tipo de clasificaciones incluir: Sospechosos,Confirmados COVID, Negativo COVID, Inv\\u00e1lido, realizado group_by_tipo_clasificacion Boolean determinando si regresa la base con cada entrada agrupada por tipo de clasificación (es decir cada fecha se generan tantos observaciones como grupos de tipo de clasificación) tipo_paciente Vector con el tipo de pacientes incluir. Opciones: AMBULATORIO, HOSPITALIZADO, ESPECIFICADO group_by_tipo_paciente Boolean determinando si regresa la base con cada entrada agrupada por tipo de paciente (es decir cada fecha se generan tantos observaciones como grupos de tipo de paciente) tipo_sector Vector con los sectores del sistema de salud incluir: CRUZ ROJA,DIF,ESTATAL,IMSS,IMSS-BIENESTAR,ISSSTE, MUNICIPAL,PEMEX, PRIVADA,SEDENA,SEMAR,SSA, UNIVERSITARIO,ESPECIFICADO. group_by_tipo_sector Boolean determinando si regresa la base con cada entrada agrupada por tipo de sector (es decir cada fecha se generan tantos observaciones como grupos de tipo de sector) edad_cut Vector con secuencia de edades para hacer grupos. Por ejemplo edad_cut = c(0, 10, Inf) arma dos grupos de edad de 0 10 y de 10 infinito o bien edad_cut = c(15, 20) deja sólo los registros entre 15 y 20 años. Por default es NULL fill_NA Regresa observaciones para todas las combinaciones de variables incluyendo como NA donde se observaron casos y por tanto el denominador y el chr es indefinido. list_name Asigna un nombre en la lista de datos la base generada .grouping_vars Vector de variables adicionales de agrupacion de los conteos","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/cfr.html","id":"valor","dir":"Reference","previous_headings":"","what":"Valor","title":"Case Fatality Rate (CFR) — cfr","text":"Appends la lista de datos_covid una nueva entrada de nombre list_name (default: casos) con una base de datos (tibble o dbConnection) con los resultados agregados. case hospitalization rate - Base de datos generara con los datos agregados (el nombre cambia si se usa list_name). dict - Diccionario de datos dats - Datos originales (conexion DB) disconnect  - Función para desconectarte de DB","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/cfr.html","id":"detalles","dir":"Reference","previous_headings":"","what":"Detalles","title":"Case Fatality Rate (CFR) — cfr","text":"official product / este es un producto oficial","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/cfr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Ejemplos","title":"Case Fatality Rate (CFR) — cfr","text":"","code":"if (FALSE) { datos_covid <- descarga_datos_abiertos(language = \"Espanol\")  #Casos a nivel nacional datos_covid <- datos_covid %>% cfr() head(datos_covid$`case fatality rate`)  #Nacional datos_covid <- datos_covid %>% cfr(list_name = \"cfr_nacional\", group_by_entidad = F)  #CFR en Jalisco y Colima datos_covid <- datos_covid %>%                     cfr(entidades = c(\"JALISCO\",\"COLIMA\"), list_name = \"cfr_Jaliscolima\")  #Calcula el CFR suponiendo toda la base son confirmados datos_covid <- datos_covid %>%     cfr(entidades = c(\"JALISCO\",\"COLIMA\"),           tipo_clasificacion = c(\"Sospechosos\",\"Confirmados COVID\",           \"Negativo a COVID\",\"Inv\\u00e1lido\", \"No realizado\"),           group_by_tipo_clasificacion = TRUE, list_name = \"Jaliscolima2_cfr\")  #Distinguiendo entre ambulatorio y hospitalizado datos_covid <- datos_covid %>%     casos(entidades = c(\"JALISCO\",\"COLIMA\"),           tipo_paciente = c(\"AMBULATORIO\", \"HOSPITALIZADO\"),           group_by_tipo_paciente = TRUE,           list_name = \"Jalisco + colima cfr\")  #CFR en ambulatorios y hospitalizados datos_covid %>% cfr(   tipo_paciente = c(\"AMBULATORIO\", \"HOSPITALIZADO\"),   group_by_tipo_paciente = TRUE,   group_by_entidad = FALSE,   list_name = \"CFR_hosp_amb\" )  %>% plot_covid(df_name = \"CFR_hosp_amb\", type = \"line\", facet_ncol = 3)  #Si deseas agrupar por una variable que no este en las opciones datos_covid <- datos_covid %>%     cfr(.grouping_vars = c(\"DIABETES\"), list_name = \"cfr_diab\") }"},{"path":"https://rodrigozepeda.github.io/covidmx/reference/chr.html","id":null,"dir":"Reference","previous_headings":"","what":"Case Hospitalization Rate (CHR) — chr","title":"Case Hospitalization Rate (CHR) — chr","text":"chr Calcula la proporción de enfermos que resultan hospitalizados sobre todos los enfermos confirmados en distintas categorías (residencia / edad / etc)","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/chr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"Case Hospitalization Rate (CHR) — chr","text":"","code":"chr(   datos_covid = NULL,   entidades = c(\"AGUASCALIENTES\", \"BAJA CALIFORNIA\", \"BAJA CALIFORNIA SUR\", \"CAMPECHE\",     \"CHIAPAS\", \"CHIHUAHUA\", \"CIUDAD DE MÉXICO\", \"COAHUILA DE ZARAGOZA\", \"COLIMA\",     \"DURANGO\", \"GUANAJUATO\", \"GUERRERO\", \"HIDALGO\", \"JALISCO\", \"MÉXICO\",     \"MICHOACÁN DE OCAMPO\", \"MORELOS\", \"NAYARIT\", \"NUEVO LEÓN\", \"OAXACA\", \"PUEBLA\",     \"QUERÉTARO\", \"QUINTANA ROO\", \"SAN LUIS POTOSÍ\", \"SINALOA\", \"SONORA\", \"TABASCO\",     \"TAMAULIPAS\", \"TLAXCALA\", \"VERACRUZ DE IGNACIO DE LA LLAVE\", \"YUCATÁN\", \"ZACATECAS\"),   group_by_entidad = TRUE,   entidad_tipo = c(\"Unidad Medica\", \"Residencia\", \"Nacimiento\"),   fecha_tipo = c(\"Sintomas\", \"Ingreso\", \"Defuncion\"),   tipo_clasificacion = c(\"Confirmados COVID\"),   group_by_tipo_clasificacion = FALSE,   incluir_paciente_no_especificado = FALSE,   tipo_sector = c(\"CRUZ ROJA\", \"DIF\", \"ESTATAL\", \"IMSS\", \"IMSS-BIENESTAR\", \"ISSSTE\",     \"MUNICIPAL\", \"PEMEX\", \"PRIVADA\", \"SEDENA\", \"SEMAR\", \"SSA\", \"UNIVERSITARIO\",     \"NO ESPECIFICADO\"),   group_by_tipo_sector = FALSE,   defunciones = FALSE,   edad_cut = NULL,   fill_NA = TRUE,   list_name = \"case hospitalization rate\",   .grouping_vars = c() )"},{"path":"https://rodrigozepeda.github.io/covidmx/reference/chr.html","id":"argumentos","dir":"Reference","previous_headings":"","what":"Argumentos","title":"Case Hospitalization Rate (CHR) — chr","text":"datos_covid data available automatically downloads COVID-19 information. entidades Vector con las entidades de las unidades medicas analizar. Opciones: AGUASCALIENTES, BAJA CALIFORNIA, BAJA CALIFORNIA SUR, CAMPECHE, CHIAPAS, CHIHUAHUA, CIUDAD DE MEXICO, COAHUILA DE ZARAGOZA , COLIMA, DURANGO, GUANAJUATO, GUERRERO, HIDALGO, JALISCO, MEXICO, MICHOACAN DE OCAMPO, MORELOS,NAYARIT NUEVO LEON, OAXACA ,PUEBLA, QUERETARO,QUINTANA ROO, SAN LUIS POTOSI, SINALOA, SONORA, TABASCO, TAMAULIPAS,TLAXCALA, VERACRUZ DE IGNACIO DE LA LLAVE, YUCATAN, ZACATECAS group_by_entidad Si junta las entidades en una sola o bien las muestra por separado sin agrupar. entidad_tipo Selecciona Unidad Medica, Nacimiento o Residencia. por default incluye Unidad Medica fecha_tipo Selecciona Ingreso, Sintomas o Defuncion por default incluye fecha de Sintomas tipo_clasificacion Vector con el tipo de clasificaciones incluir: Sospechosos,Confirmados COVID, Negativo COVID, Inv\\u00e1lido, realizado group_by_tipo_clasificacion Boolean determinando si regresa la base con cada entrada agrupada por tipo de clasificación (es decir cada fecha se generan tantos observaciones como grupos de tipo de clasificación) incluir_paciente_no_especificado Si en el denominador se incluyen los pacientes cuyo tipo es  ESPECIFICADO. Por default es FALSE por lo que sólo se incluyen AMBULATORIO, HOSPITALIZADO. tipo_sector Vector con los sectores del sistema de salud incluir: CRUZ ROJA,DIF,ESTATAL,IMSS,IMSS-BIENESTAR,ISSSTE, MUNICIPAL,PEMEX, PRIVADA,SEDENA,SEMAR,SSA, UNIVERSITARIO,ESPECIFICADO. group_by_tipo_sector Boolean determinando si regresa la base con cada entrada agrupada por tipo de sector (es decir cada fecha se generan tantos observaciones como grupos de tipo de sector) defunciones Boolean si incluir sólo defunciones TRUE o todos FALSE. edad_cut Vector con secuencia de edades para hacer grupos. Por ejemplo edad_cut = c(0, 10, Inf) arma dos grupos de edad de 0 10 y de 10 infinito o bien edad_cut = c(15, 20) deja sólo los registros entre 15 y 20 años. Por default es NULL fill_NA Regresa observaciones para todas las combinaciones de variables incluyendo como NA donde se observaron casos y por tanto el denominador y el chr es indefinido. list_name Asigna un nombre en la lista de datos la base generada .grouping_vars Vector de variables adicionales de agrupacion de los conteos","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/chr.html","id":"valor","dir":"Reference","previous_headings":"","what":"Valor","title":"Case Hospitalization Rate (CHR) — chr","text":"Appends la lista de datos_covid una nueva entrada de nombre list_name (default: casos) con una base de datos (tibble o dbConnection) con los resultados agregados. case hospitalization rate - Base de datos generara con los datos agregados (el nombre cambia si se usa list_name). dict - Diccionario de datos dats - Datos originales (conexion DB) disconnect  - Función para desconectarte de DB","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/chr.html","id":"detalles","dir":"Reference","previous_headings":"","what":"Detalles","title":"Case Hospitalization Rate (CHR) — chr","text":"official product / este es un producto oficial","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/chr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Ejemplos","title":"Case Hospitalization Rate (CHR) — chr","text":"","code":"if (FALSE) { datos_covid <- descarga_datos_abiertos(language = \"Espanol\")  #Casos a nivel nacional datos_covid <- datos_covid %>% chr() head(datos_covid$`case hospitalization rate`)  #Nacional datos_covid <- datos_covid %>% chr(list_name = \"chr nacional\", group_by_entidad = F)  #CFR en Jalisco y Colima datos_covid <- datos_covid %>%                     chr(entidades = c(\"JALISCO\",\"COLIMA\"), list_name = \"chr_Jaliscolima\")  #Calcula el CHR suponiendo toda la base son confirmados datos_covid <- datos_covid %>%     chr(entidades = c(\"JALISCO\",\"COLIMA\"),           tipo_clasificacion = c(\"Sospechosos\",\"Confirmados COVID\",           \"Negativo a COVID\",\"Inv\\u00e1lido\", \"No realizado\"),           group_by_tipo_clasificacion = TRUE, list_name = \"Jaliscolima2_chr\")  #Distinguiendo sólo entre defunciones datos_covid <- datos_covid %>%     chr(entidades = c(\"JALISCO\",\"COLIMA\"),           defunciones = TRUE,           list_name = \"Jalisco + colima chr\")  #Si deseas agrupar por una variable que no este en las opciones datos_covid <- datos_covid %>%     chr(.grouping_vars = c(\"DIABETES\"), list_name = \"chr_diab\") }"},{"path":"https://rodrigozepeda.github.io/covidmx/reference/covidmx-package.html","id":null,"dir":"Reference","previous_headings":"","what":"covidmx: COVID-19 Dataset Analysis for Mexico — covidmx-package","title":"covidmx: COVID-19 Dataset Analysis for Mexico — covidmx-package","text":"Downloads analyzes data COVID-19 Empidemiology Directorate Mexico. Descarga y analiza los datos para COVID-19 de la Direccion General de Epidemiologia de Mexico.","code":""},{"path":[]},{"path":"https://rodrigozepeda.github.io/covidmx/reference/covidmx-package.html","id":"autor-a","dir":"Reference","previous_headings":"","what":"Autor-a","title":"covidmx: COVID-19 Dataset Analysis for Mexico — covidmx-package","text":"Maintainer: Rodrigo Zepeda-Tello rzepeda17@gmail.com (ORCID)","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/descarga_datos_abiertos.html","id":null,"dir":"Reference","previous_headings":"","what":"DESCARGA BASE DE DATOS ABIERTOS DE LA DIRECCION GENERAL DE EPIDEMIOLOGIA — descarga_datos_abiertos","title":"DESCARGA BASE DE DATOS ABIERTOS DE LA DIRECCION GENERAL DE EPIDEMIOLOGIA — descarga_datos_abiertos","text":"descarga_datos_abiertos downloads labels COVID-19 data Mexico Direccion General de EpidemiologIa https://www.gob.mx/salud/documentos/datos-abiertos-152127. descarga_datos_abiertos descarga y etiqueta todos los datos de COVID-19 de Mexico de la Direccion General de EpidemiologIa en https://www.gob.mx/salud/documentos/datos-abiertos-152127.","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/descarga_datos_abiertos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"DESCARGA BASE DE DATOS ABIERTOS DE LA DIRECCION GENERAL DE EPIDEMIOLOGIA — descarga_datos_abiertos","text":"","code":"descarga_datos_abiertos(   download_method = \"curl\",   file_download_data = tempfile(),   file_download_dictionary = tempfile(),   remove_zip_after_download = TRUE,   quiet = FALSE,   parse_warnings = FALSE,   language = c(\"Español\", \"English\"),   read_format = c(\"MariaDB\", \"tibble\"),   user = Sys.getenv(\"MariaDB_user\"),   password = Sys.getenv(\"MariaDB_password\"),   dbname = Sys.getenv(\"MariaDB_dbname\"),   host = Sys.getenv(\"MariaDB_host\"),   group = Sys.getenv(\"MariaDB_group\"),   port = Sys.getenv(\"MariaDB_port\"),   tblname = \"covidmx\",   dict_file = \"diccionario_covid.RData\",   download_dict = TRUE,   save_dict = download_dict,   site.covid = paste0(\"http://datosabiertos.salud.gob.mx/gobmx/salud\",     \"/datos_abiertos/datos_abiertos_covid19.zip\"),   site.covid.dic = paste0(\"http://datosabiertos.salud.gob.mx/gobmx/salud/\",     \"datos_abiertos/diccionario_datos_covid19.zip\"),   nthreads = max(parallel::detectCores() - 1, 1),   unzip_command = ifelse(tolower(.Platform$OS.type) == \"windows\",     \"\\\"C:\\\\Program Files\\\\7-Zip\\\\7z.exe\\\"\", \"unzip\"),   unzip_args = ifelse(tolower(.Platform$OS.type) == \"windows\", \"-x\", \"-o\"),   check_unzip_install = TRUE,   ... )"},{"path":"https://rodrigozepeda.github.io/covidmx/reference/descarga_datos_abiertos.html","id":"argumentos","dir":"Reference","previous_headings":"","what":"Argumentos","title":"DESCARGA BASE DE DATOS ABIERTOS DE LA DIRECCION GENERAL DE EPIDEMIOLOGIA — descarga_datos_abiertos","text":"download_method Methods download file (default = \"curl\"). options \"internal\", \"wininet\" (Windows) \"libcurl\", \"wget\", \"curl\". See download.file / Metodos para descargar el archivo (default = \"curl\"). Otras opciones incluyen \"interno\",\"wininet\" (Windows) \" libcurl\", \"wget\", \"curl\". Vease download.file. file_download_data Name file save data / Nombre del archivo para guardar los datos. file_download_dictionary Name file save dictionary / Nombre del archivo donde guardar el diccioanrio. remove_zip_after_download downloaded zip file saved / Si los archivos zip descargados deben ser almacenados. quiet Show messages? / Mostrar mensajes? parse_warnings show parsing errors reading csv / Si muestra errores cuando lee el csv language ('Español', 'English') Message languages/ Idiomas del mensaje. read_format \"MariaDB\" \"tibble\" establishes database stored. machines \"tibble\" result memory error user User dbConnect .e. MariaDB user password password dbConnect .e. MariaDB password dbname Database name dbConnect .e. database going stored host Host dbConnect .e. MariaDB host (usually localhost) group Group dbConnect .e. MariaDB group (can NULL) port Port connection MariaDB tblname Name table save MariaDB dict_file RData File save/read dictionary. download_dict download dictionary site.covid.dic. download_dict FALSE dict_file must specified read dictionary. save_dict downloaded dictionary saved file dict_file site.covid Site download covid information site.covid.dic Site download covid dictionary data nthreads Number threads writing MariaDB. unzip_command Forma de extraer la base de datos de datos abiertos. La forma de llamarla es con system2(unzip_command, args = c(unzip_args, file_download_data)). unzip_args Argumentos de extraccion de la base de datos de datos abiertos. La forma de llamarla es con system2(unzip_command, args = c(unzip_args, file_download_data)). check_unzip_install Bandera de verificacion para checar si tienes lo necesario para unzippear los datos. ... Parametros adicionales para DBI::dbConnect.","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/descarga_datos_abiertos.html","id":"valor","dir":"Reference","previous_headings":"","what":"Valor","title":"DESCARGA BASE DE DATOS ABIERTOS DE LA DIRECCION GENERAL DE EPIDEMIOLOGIA — descarga_datos_abiertos","text":"List values: dats - Database table (MARIADB) database tibble (tibble) con - Database connection (MARIADB) NULL (tibble) dict - List tibbles containing whole dictionary","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/descarga_datos_abiertos.html","id":"detalles","dir":"Reference","previous_headings":"","what":"Detalles","title":"DESCARGA BASE DE DATOS ABIERTOS DE LA DIRECCION GENERAL DE EPIDEMIOLOGIA — descarga_datos_abiertos","text":"official product / este es un producto oficial English reading data perfectly normal get Warning parsing: dataset issues. Spanish En la lectura de datos es normal tener un Warning por parsing: la base tiene errores de registro. Necesitas tener una instalacion funcionando de MariaDB. El programa se encarga de descargar la base de datos de la DGE, abrir el archivo .zip y crear una tabla de nombre covidmx dentro de tu database dbname. Asegurate de que tu usuario user tenga permisos de escritura. Para mas informacion sobre instalacion y uso de MariaDB consulta el articulo correspondiente. Si tienes RAM que te sobre puedes crear una base de datos en MariaDB sino leer directo el archivo csv. Esto se logra con read_format = tibble. lo recomiendo pues puedes terminar con tu sesion de R si se te acaba la memoria. Windows Para abrir el archivo .zip requieres tambien descargar e instalar 7Zip por default el sistema lo busca en C:\\\\Program Files\\\\7-Zip\\\\7z.exe pero si esta ese directorio es necesario que en unzip_command especifiques el camino donde se instalo 7z.exe.","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/descarga_datos_abiertos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Ejemplos","title":"DESCARGA BASE DE DATOS ABIERTOS DE LA DIRECCION GENERAL DE EPIDEMIOLOGIA — descarga_datos_abiertos","text":"","code":"if (FALSE) { datos_covid <- descarga_datos_abiertos(language = \"Espanol\") }"},{"path":"https://rodrigozepeda.github.io/covidmx/reference/descarga_datos_ocupacion_hospitalaria.html","id":null,"dir":"Reference","previous_headings":"","what":"LEE LA BASE DE DATOS DE OCUPACIoN HOSPITALARIA — descarga_datos_ocupacion_hospitalaria","title":"LEE LA BASE DE DATOS DE OCUPACIoN HOSPITALARIA — descarga_datos_ocupacion_hospitalaria","text":"descarga_datos_ocupacion_hospitalaria Lee los datos de ocupacion hospitalaria de la RED IRAG disponibles en https://www.gits.igg.unam.mx/red-irag-dashboard/reviewHome#","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/descarga_datos_ocupacion_hospitalaria.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"LEE LA BASE DE DATOS DE OCUPACIoN HOSPITALARIA — descarga_datos_ocupacion_hospitalaria","text":"","code":"descarga_datos_ocupacion_hospitalaria(nivel = c(\"Estatal\", \"Unidad Médica\"))"},{"path":"https://rodrigozepeda.github.io/covidmx/reference/descarga_datos_ocupacion_hospitalaria.html","id":"argumentos","dir":"Reference","previous_headings":"","what":"Argumentos","title":"LEE LA BASE DE DATOS DE OCUPACIoN HOSPITALARIA — descarga_datos_ocupacion_hospitalaria","text":"nivel \"Estatal\" o \"Unidad Médica\"","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/descarga_datos_ocupacion_hospitalaria.html","id":"valor","dir":"Reference","previous_headings":"","what":"Valor","title":"LEE LA BASE DE DATOS DE OCUPACIoN HOSPITALARIA — descarga_datos_ocupacion_hospitalaria","text":"data.frame con los datos de ocupacion hospitalaria","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/descarga_datos_ocupacion_hospitalaria.html","id":"detalles","dir":"Reference","previous_headings":"","what":"Detalles","title":"LEE LA BASE DE DATOS DE OCUPACIoN HOSPITALARIA — descarga_datos_ocupacion_hospitalaria","text":"official product / este es un producto oficial Spanish Los datos son descargados de manera automatica en mi Github: RodrigoZepeda/CapacidadHospitalariaMX y esta funcion los lee de ahí","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/descarga_datos_ocupacion_hospitalaria.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Ejemplos","title":"LEE LA BASE DE DATOS DE OCUPACIoN HOSPITALARIA — descarga_datos_ocupacion_hospitalaria","text":"","code":"if (FALSE) { ocupacion_hospitalaria <- descarga_datos_ocupacion_hospitalaria() }"},{"path":"https://rodrigozepeda.github.io/covidmx/reference/descarga_datos_variantes_GISAID.html","id":null,"dir":"Reference","previous_headings":"","what":"LEE LA BASE DE DATOS DE VARIANTES DE GISAID — descarga_datos_variantes_GISAID","title":"LEE LA BASE DE DATOS DE VARIANTES DE GISAID — descarga_datos_variantes_GISAID","text":"descarga_datos_variantes_GISAID Lee los datos de variantes publicadas por GISAID","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/descarga_datos_variantes_GISAID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"LEE LA BASE DE DATOS DE VARIANTES DE GISAID — descarga_datos_variantes_GISAID","text":"","code":"descarga_datos_variantes_GISAID(type = c(\"nacional\", \"cdmx\"))"},{"path":"https://rodrigozepeda.github.io/covidmx/reference/descarga_datos_variantes_GISAID.html","id":"argumentos","dir":"Reference","previous_headings":"","what":"Argumentos","title":"LEE LA BASE DE DATOS DE VARIANTES DE GISAID — descarga_datos_variantes_GISAID","text":"type si se desea descargar \"nacional\" o sólo \"cdmx\"","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/descarga_datos_variantes_GISAID.html","id":"valor","dir":"Reference","previous_headings":"","what":"Valor","title":"LEE LA BASE DE DATOS DE VARIANTES DE GISAID — descarga_datos_variantes_GISAID","text":"data.frame con los datos porcentuales y de conteo de variantes","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/descarga_datos_variantes_GISAID.html","id":"detalles","dir":"Reference","previous_headings":"","what":"Detalles","title":"LEE LA BASE DE DATOS DE VARIANTES DE GISAID — descarga_datos_variantes_GISAID","text":"Cada vez que uses estos datos necesitas citar GISAID así como esta publicación producto del análisis de dichos datos. official product / este es un producto oficial Spanish Los datos son descargados de manera automatica en mi Github: RodrigoZepeda/VariantesCovid y esta funcion los lee de ahí","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/descarga_datos_variantes_GISAID.html","id":"referencias","dir":"Reference","previous_headings":"","what":"Referencias","title":"LEE LA BASE DE DATOS DE VARIANTES DE GISAID — descarga_datos_variantes_GISAID","text":"Khare, S., et al (2021) GISAID’s Role Pandemic Response. China CDC Weekly, 3(49): 1049-1051. doi:10.46234/ccdcw2021.255 PMCID: 8668406 Elbe, S. Buckland-Merrett, G. (2017) Data, disease diplomacy: GISAID’s innovative contribution global health. Global Challenges, 1:33-46. doi:10.1002/gch2.1018 PMCID: 31565258 Shu, Y. McCauley, J. (2017) GISAID: vision reality. EuroSurveillance, 22(13) doi:10.2807/1560-7917.ES.2017.22.13.30494 PMCID: PMC5388101","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/descarga_datos_variantes_GISAID.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Ejemplos","title":"LEE LA BASE DE DATOS DE VARIANTES DE GISAID — descarga_datos_variantes_GISAID","text":"","code":"if (FALSE) { variantes_covid <- descarga_datos_variantes_GISAID() }"},{"path":"https://rodrigozepeda.github.io/covidmx/reference/numero_pruebas.html","id":null,"dir":"Reference","previous_headings":"","what":"Numero de Pruebas — numero_pruebas","title":"Numero de Pruebas — numero_pruebas","text":"numero_pruebas Calcula el numero total de pruebas por fecha agrupando (o sin hacerlo) por covariables.","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/numero_pruebas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"Numero de Pruebas — numero_pruebas","text":"","code":"numero_pruebas(   datos_covid = NULL,   entidades = c(\"AGUASCALIENTES\", \"BAJA CALIFORNIA\", \"BAJA CALIFORNIA SUR\", \"CAMPECHE\",     \"CHIAPAS\", \"CHIHUAHUA\", \"CIUDAD DE MÉXICO\", \"COAHUILA DE ZARAGOZA\", \"COLIMA\",     \"DURANGO\", \"GUANAJUATO\", \"GUERRERO\", \"HIDALGO\", \"JALISCO\", \"MÉXICO\",     \"MICHOACÁN DE OCAMPO\", \"MORELOS\", \"NAYARIT\", \"NUEVO LEÓN\", \"OAXACA\", \"PUEBLA\",     \"QUERÉTARO\", \"QUINTANA ROO\", \"SAN LUIS POTOSÍ\", \"SINALOA\", \"SONORA\", \"TABASCO\",     \"TAMAULIPAS\", \"TLAXCALA\", \"VERACRUZ DE IGNACIO DE LA LLAVE\", \"YUCATÁN\", \"ZACATECAS\"),   group_by_entidad = TRUE,   entidad_tipo = c(\"Unidad Medica\", \"Residencia\", \"Nacimiento\"),   fecha_tipo = c(\"Sintomas\", \"Ingreso\", \"Defuncion\"),   tipo_prueba = c(\"Antigeno\", \"PCR\"),   group_by_tipo_prueba = TRUE,   tipo_paciente = c(\"AMBULATORIO\", \"HOSPITALIZADO\", \"NO ESPECIFICADO\"),   group_by_tipo_paciente = FALSE,   tipo_uci = c(\"SI\", \"NO\", \"NO APLICA\", \"SE IGNORA\", \"NO ESPECIFICADO\"),   group_by_tipo_uci = FALSE,   tipo_sector = c(\"CRUZ ROJA\", \"DIF\", \"ESTATAL\", \"IMSS\", \"IMSS-BIENESTAR\", \"ISSSTE\",     \"MUNICIPAL\", \"PEMEX\", \"PRIVADA\", \"SEDENA\", \"SEMAR\", \"SSA\", \"UNIVERSITARIO\",     \"NO ESPECIFICADO\"),   group_by_tipo_sector = FALSE,   defunciones = FALSE,   edad_cut = NULL,   as_tibble = TRUE,   fill_zeros = as_tibble,   list_name = \"numero_pruebas\",   .grouping_vars = c() )"},{"path":"https://rodrigozepeda.github.io/covidmx/reference/numero_pruebas.html","id":"argumentos","dir":"Reference","previous_headings":"","what":"Argumentos","title":"Numero de Pruebas — numero_pruebas","text":"datos_covid data available automatically downloads COVID-19 information. entidades Vector con las entidades de las unidades medicas analizar. Opciones: AGUASCALIENTES, BAJA CALIFORNIA, BAJA CALIFORNIA SUR, CAMPECHE, CHIAPAS, CHIHUAHUA, CIUDAD DE MEXICO, COAHUILA DE ZARAGOZA , COLIMA, DURANGO, GUANAJUATO, GUERRERO, HIDALGO, JALISCO, MEXICO, MICHOACAN DE OCAMPO, MORELOS,NAYARIT NUEVO LEON, OAXACA ,PUEBLA, QUERETARO,QUINTANA ROO, SAN LUIS POTOSI, SINALOA, SONORA, TABASCO, TAMAULIPAS,TLAXCALA, VERACRUZ DE IGNACIO DE LA LLAVE, YUCATAN, ZACATECAS group_by_entidad Si junta las entidades en una sola o bien las muestra por separado sin agrupar. entidad_tipo Selecciona Unidad Medica, Nacimiento o Residencia. por default incluye Unidad Medica fecha_tipo Selecciona Ingreso, Sintomas o Defuncion por default incluye fecha de Sintomas tipo_prueba Vector con el tipo de pruebas incluir Antigeno, PCR group_by_tipo_prueba Boolean determinando si regresa la base con cada entrada agrupada por tipo de pureba (es decir cada fecha y entidad reporta separado positividad en PCR y Antigeno) tipo_paciente Vector con el tipo de pacientes incluir. Opciones: AMBULATORIO, HOSPITALIZADO, ESPECIFICADO group_by_tipo_paciente Boolean determinando si regresa la base con cada entrada agrupada por tipo de paciente (es decir cada fecha se generan tantos observaciones como grupos de tipo de paciente) tipo_uci Vector con el tipo de valores para Unidad de Cuidado Intensivo incluir: SI,,APLICA,SE IGNORA,ESPECIFICADO group_by_tipo_uci Boolean determinando si regresa la base con cada entrada agrupada por tipo de uci (es decir cada fecha se generan tantos observaciones como grupos de tipo de uci) tipo_sector Vector con los sectores del sistema de salud incluir: CRUZ ROJA,DIF,ESTATAL,IMSS,IMSS-BIENESTAR,ISSSTE, MUNICIPAL,PEMEX, PRIVADA,SEDENA,SEMAR,SSA, UNIVERSITARIO,ESPECIFICADO. group_by_tipo_sector Boolean determinando si regresa la base con cada entrada agrupada por tipo de sector (es decir cada fecha se generan tantos observaciones como grupos de tipo de sector) defunciones Boolean si incluir sólo defunciones TRUE o todos FALSE. edad_cut Vector con secuencia de edades para hacer grupos. Por ejemplo edad_cut = c(0, 10, Inf) arma dos grupos de edad de 0 10 y de 10 infinito o bien edad_cut = c(15, 20) deja sólo los registros entre 15 y 20 años. Por default es NULL as_tibble Regresar como tibble el resultado. En caso de que as_tibble sea FALSE se devuelve como conexion en MARIADB. fill_zeros En caso de que el resultado sea un tibble regresa observaciones para todas las combinaciones de variables incluyendo como 0 donde se observaron casos. En caso contrario se incluyen las filas donde se observaron casos. list_name Asigna un nombre en la lista de datos la base generada .grouping_vars Vector de variables adicionales de agrupacion de los conteos","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/numero_pruebas.html","id":"valor","dir":"Reference","previous_headings":"","what":"Valor","title":"Numero de Pruebas — numero_pruebas","text":"Appends la lista de datos_covid una nueva entrada de nombre list_name (default: casos) con una base de datos (tibble o dbConnection) con los resultados agregados. positividad - Base de datos generara con los datos agregados (el nombre cambia si se usa list_name). dict - Diccionario de datos dats - Datos originales (conexion DB) disconnect  - Función para desconectarte de DB","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/numero_pruebas.html","id":"detalles","dir":"Reference","previous_headings":"","what":"Detalles","title":"Numero de Pruebas — numero_pruebas","text":"Por default calcula la el numero de pruebas de Antígeno y PCR por estado y tipo official product / este es un producto oficial","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/numero_pruebas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Ejemplos","title":"Numero de Pruebas — numero_pruebas","text":"","code":"if (FALSE) { datos_covid <- descarga_datos_abiertos(language = \"Espanol\")  #Número de pruebas PCR/ANTI a nivel nacional por estado datos_covid <- datos_covid %>% numero_pruebas() head(datos_covid$numero_pruebas)  #Número de pruebas nacionales pero sin separar por tipo ni estado datos_covid <- datos_covid %>%      numero_pruebas(group_by_entidad = FALSE, group_by_tipo_prueba = FALSE,      list_name = \"Todas_las_pruebas\")  #Positivos en Jalisco y Colima casos_col_jal <- datos_covid %>%                    numero_pruebas(entidades = c(\"JALISCO\",\"COLIMA\"),                                   list_name = \"Pruebas_jal_col\")  #Si deseas agrupar por una variable que no este en las opciones asi como tipo paciente casos_col_jal <- datos_covid %>%     numero_pruebas(entidades = c(\"JALISCO\",\"COLIMA\"),           tipo_paciente = c(\"AMBULATORIO\", \"HOSPITALIZADO\"),           group_by_tipo_paciente = TRUE,           .grouping_vars = c(\"DIABETES\"),           list_name      = \"Diabetescoljal\") }"},{"path":"https://rodrigozepeda.github.io/covidmx/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://rodrigozepeda.github.io/covidmx/reference/pipe.html","id":"argumentos","dir":"Reference","previous_headings":"","what":"Argumentos","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/pipe.html","id":"valor","dir":"Reference","previous_headings":"","what":"Valor","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/plot_covid.html","id":null,"dir":"Reference","previous_headings":"","what":"PLOT DATOS DE COVID — plot_covid","title":"PLOT DATOS DE COVID — plot_covid","text":"plot_covid Grafica automaticamente la base de datos de covid","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/plot_covid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"PLOT DATOS DE COVID — plot_covid","text":"","code":"plot_covid(   datos_covid = NULL,   df_name = \"casos\",   df_date_index = stringr::str_subset(colnames(datos_covid[df_name][[1]]),     \"FECHA|fecha|Fecha\"),   df_variable = NULL,   df_covariates = NULL,   facet_scale = \"free_y\",   facet_ncol = 4,   date_break_format = \"2 months\",   date_labels_format = \"%B-%y\",   type = c(\"point\", \"line\", \"spline\", \"area\"),   plot_theme = ggplot2::theme(panel.background = ggplot2::element_rect(fill = \"white\"),     plot.background = ggplot2::element_rect(fill = \"white\"), axis.text.x =     ggplot2::element_text(angle = 90, hjust = 1), axis.line.x =     ggplot2::element_line(color = \"black\"), legend.position = \"none\"),   ... )"},{"path":"https://rodrigozepeda.github.io/covidmx/reference/plot_covid.html","id":"argumentos","dir":"Reference","previous_headings":"","what":"Argumentos","title":"PLOT DATOS DE COVID — plot_covid","text":"datos_covid data available automatically downloads COVID-19 information y calcula los casos por entidad df_name Nombre de la base de datos dentro de la lista datos_covid df_date_index Nombre de la variable que contiene la fecha df_variable Nombre de la variable que se va graficar en el eje y df_covariates Covariables para el facet (maximo 2) facet_scale Escala para el facet_wrap facet_ncol Numero de columnas para el facet_wrap date_break_format Breaks para el eje x date_labels_format Formato de fecha para el eje x type Tipo de grafica (line, area, spline o point) plot_theme Tema para el ggplot2 ... Parametros adicionales para ggformula::geom_spline en caso de elegir type=\"spline\"","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/plot_covid.html","id":"detalles","dir":"Reference","previous_headings":"","what":"Detalles","title":"PLOT DATOS DE COVID — plot_covid","text":"Por default calcula el total de casos. official product / este es un producto oficial","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/plot_covid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Ejemplos","title":"PLOT DATOS DE COVID — plot_covid","text":"","code":"if (FALSE) { #Grafica de casos por entidad datos_covid %>% casos() %>% plot_covid()  #Grafica de casos nacional datos_covid %>% casos(group_by_entidad = F) %>% plot_covid()  #Grafica de casos nacional datos_covid %>% casos(group_by_entidad = F) %>% plot_covid()  #Ajuste mediante splines datos_covid %>% casos(group_by_entidad = F) %>% plot_covid(type = \"spline\", spar = 0.5)  #Ajuste mediante splines datos_covid %>% casos(group_by_entidad = T, group_by_tipo_clasificacion = T, df_variable = \"n\") %>%        plot_covid() }"},{"path":"https://rodrigozepeda.github.io/covidmx/reference/positividad.html","id":null,"dir":"Reference","previous_headings":"","what":"Positividad — positividad","title":"Positividad — positividad","text":"positividad Calcula la positividad por fecha agrupando (o sin hacerlo) por covariables.","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/positividad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"Positividad — positividad","text":"","code":"positividad(   datos_covid = NULL,   entidades = c(\"AGUASCALIENTES\", \"BAJA CALIFORNIA\", \"BAJA CALIFORNIA SUR\", \"CAMPECHE\",     \"CHIAPAS\", \"CHIHUAHUA\", \"CIUDAD DE MÉXICO\", \"COAHUILA DE ZARAGOZA\", \"COLIMA\",     \"DURANGO\", \"GUANAJUATO\", \"GUERRERO\", \"HIDALGO\", \"JALISCO\", \"MÉXICO\",     \"MICHOACÁN DE OCAMPO\", \"MORELOS\", \"NAYARIT\", \"NUEVO LEÓN\", \"OAXACA\", \"PUEBLA\",     \"QUERÉTARO\", \"QUINTANA ROO\", \"SAN LUIS POTOSÍ\", \"SINALOA\", \"SONORA\", \"TABASCO\",     \"TAMAULIPAS\", \"TLAXCALA\", \"VERACRUZ DE IGNACIO DE LA LLAVE\", \"YUCATÁN\", \"ZACATECAS\"),   group_by_entidad = TRUE,   entidad_tipo = c(\"Unidad Medica\", \"Residencia\", \"Nacimiento\"),   fecha_tipo = c(\"Sintomas\", \"Ingreso\", \"Defuncion\"),   tipo_prueba = c(\"Antigeno\", \"PCR\"),   group_by_tipo_prueba = TRUE,   tipo_paciente = c(\"AMBULATORIO\", \"HOSPITALIZADO\", \"NO ESPECIFICADO\"),   group_by_tipo_paciente = FALSE,   tipo_uci = c(\"SI\", \"NO\", \"NO APLICA\", \"SE IGNORA\", \"NO ESPECIFICADO\"),   group_by_tipo_uci = FALSE,   tipo_sector = c(\"CRUZ ROJA\", \"DIF\", \"ESTATAL\", \"IMSS\", \"IMSS-BIENESTAR\", \"ISSSTE\",     \"MUNICIPAL\", \"PEMEX\", \"PRIVADA\", \"SEDENA\", \"SEMAR\", \"SSA\", \"UNIVERSITARIO\",     \"NO ESPECIFICADO\"),   group_by_tipo_sector = FALSE,   defunciones = FALSE,   edad_cut = NULL,   fill_NA = TRUE,   list_name = \"positividad\",   remove_inconclusive = TRUE,   .grouping_vars = c() )"},{"path":"https://rodrigozepeda.github.io/covidmx/reference/positividad.html","id":"argumentos","dir":"Reference","previous_headings":"","what":"Argumentos","title":"Positividad — positividad","text":"datos_covid data available automatically downloads COVID-19 information. entidades Vector con las entidades de las unidades medicas analizar. Opciones: AGUASCALIENTES, BAJA CALIFORNIA, BAJA CALIFORNIA SUR, CAMPECHE, CHIAPAS, CHIHUAHUA, CIUDAD DE MEXICO, COAHUILA DE ZARAGOZA , COLIMA, DURANGO, GUANAJUATO, GUERRERO, HIDALGO, JALISCO, MEXICO, MICHOACAN DE OCAMPO, MORELOS,NAYARIT NUEVO LEON, OAXACA ,PUEBLA, QUERETARO,QUINTANA ROO, SAN LUIS POTOSI, SINALOA, SONORA, TABASCO, TAMAULIPAS,TLAXCALA, VERACRUZ DE IGNACIO DE LA LLAVE, YUCATAN, ZACATECAS group_by_entidad Si junta las entidades en una sola o bien las muestra por separado sin agrupar. entidad_tipo Selecciona Unidad Medica, Nacimiento o Residencia. por default incluye Unidad Medica fecha_tipo Selecciona Ingreso, Sintomas o Defuncion por default incluye fecha de Sintomas tipo_prueba Vector con el tipo de pruebas incluir Antigeno, PCR group_by_tipo_prueba Boolean determinando si regresa la base con cada entrada agrupada por tipo de pureba (es decir cada fecha y entidad reporta separado positividad en PCR y Antigeno) tipo_paciente Vector con el tipo de pacientes incluir. Opciones: AMBULATORIO, HOSPITALIZADO, ESPECIFICADO group_by_tipo_paciente Boolean determinando si regresa la base con cada entrada agrupada por tipo de paciente (es decir cada fecha se generan tantos observaciones como grupos de tipo de paciente) tipo_uci Vector con el tipo de valores para Unidad de Cuidado Intensivo incluir: SI,,APLICA,SE IGNORA,ESPECIFICADO group_by_tipo_uci Boolean determinando si regresa la base con cada entrada agrupada por tipo de uci (es decir cada fecha se generan tantos observaciones como grupos de tipo de uci) tipo_sector Vector con los sectores del sistema de salud incluir: CRUZ ROJA,DIF,ESTATAL,IMSS,IMSS-BIENESTAR,ISSSTE, MUNICIPAL,PEMEX, PRIVADA,SEDENA,SEMAR,SSA, UNIVERSITARIO,ESPECIFICADO. group_by_tipo_sector Boolean determinando si regresa la base con cada entrada agrupada por tipo de sector (es decir cada fecha se generan tantos observaciones como grupos de tipo de sector) defunciones Boolean si incluir solo defunciones TRUE o todos FALSE. edad_cut Vector con secuencia de edades para hacer grupos. Por ejemplo edad_cut = c(0, 10, Inf) arma dos grupos de edad de 0 10 y de 10 infinito o bien edad_cut = c(15, 20) deja solo los registros entre 15 y 20 años. Por default es NULL fill_NA Regresa observaciones para todas las combinaciones de variables incluyendo como NA donde se observaron casos en el denominador. En caso contrario se incluyen las filas donde se observaron casos. list_name Asigna un nombre en la lista de datos la base generada remove_inconclusive considera las pruebas cuyo resultado es inconcluso o aún ha sido otorgado .grouping_vars Vector de variables adicionales de agrupacion de los conteos","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/positividad.html","id":"valor","dir":"Reference","previous_headings":"","what":"Valor","title":"Positividad — positividad","text":"Appends la lista de datos_covid una nueva entrada de nombre list_name (default: casos) con una base de datos (tibble) con los resultados agregados. positividad - Base de datos generara con los datos agregados (el nombre cambia si se usa list_name). dict - Diccionario de datos dats - Datos originales (conexion DB) disconnect  - Funcion para desconectarte de DB","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/positividad.html","id":"detalles","dir":"Reference","previous_headings":"","what":"Detalles","title":"Positividad — positividad","text":"Por default calcula la positividad de Antigeno + PCR por estado official product / este es un producto oficial","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/positividad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Ejemplos","title":"Positividad — positividad","text":"","code":"if (FALSE) { datos_covid <- descarga_datos_abiertos(language = \"Espanol\")  #Casos a nivel nacional por estado por tipo de prueba datos_covid <- datos_covid %>% positividad() head(datos_covid$casos)  #Total nacional defunciones <- datos_covid %>% positividad(group_by_entidad = FALSE)  #Positivos en Jalisco y Colima casos_col_jal <- datos_covid %>% positividad(entidades = c(\"JALISCO\",\"COLIMA\"))  #Agrupando ambas pruebas en una sola confirmados <- datos_covid %>%     positividad(entidades = c(\"JALISCO\",\"COLIMA\"),           group_by_tipo_prueba = FALSE)  #Regresa la suma de los de COLIMA + JALISCO casos_col_jal <- datos_covid %>%     positividad(entidades = c(\"JALISCO\",\"COLIMA\"),           tipo_paciente = c(\"AMBULATORIO\", \"HOSPITALIZADO\"),           group_by_tipo_paciente = TRUE)  #Si deseas agrupar por una variable que no este en las opciones casos_col_jal <- datos_covid %>%     positividad(entidades = c(\"JALISCO\",\"COLIMA\"),           tipo_paciente = c(\"AMBULATORIO\", \"HOSPITALIZADO\"),           group_by_tipo_paciente = TRUE,           .grouping_vars = c(\"DIABETES\")) }"},{"path":"https://rodrigozepeda.github.io/covidmx/reference/read_datos_abiertos.html","id":null,"dir":"Reference","previous_headings":"","what":"LEE LA BASE DE DATOS ABIERTOS DE LA DIRECCION GENERAL DE EPIDEMIOLOGIA QUE YA DESCARGASTE — read_datos_abiertos","title":"LEE LA BASE DE DATOS ABIERTOS DE LA DIRECCION GENERAL DE EPIDEMIOLOGIA QUE YA DESCARGASTE — read_datos_abiertos","text":"read_datos_abiertos Lee los datos abiertos almacenados en tu base de MariaDB que bajaste con descarga_datos_abiertos","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/read_datos_abiertos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"LEE LA BASE DE DATOS ABIERTOS DE LA DIRECCION GENERAL DE EPIDEMIOLOGIA QUE YA DESCARGASTE — read_datos_abiertos","text":"","code":"read_datos_abiertos(   user = Sys.getenv(\"MariaDB_user\"),   password = Sys.getenv(\"MariaDB_password\"),   dbname = Sys.getenv(\"MariaDB_dbname\"),   host = Sys.getenv(\"MariaDB_host\"),   group = Sys.getenv(\"MariaDB_group\"),   port = Sys.getenv(\"MariaDB_port\"),   tblname = \"covidmx\",   dict_file = \"diccionario_covid.RData\",   download_dict = FALSE,   download_method = \"curl\",   save_dict = download_dict,   file_download_dictionary = tempfile(),   remove_zip_after_download = TRUE,   site.covid.dic = paste0(\"http://datosabiertos.salud.gob.mx/gobmx/salud/\",     \"datos_abiertos/diccionario_datos_covid19.zip\") )"},{"path":"https://rodrigozepeda.github.io/covidmx/reference/read_datos_abiertos.html","id":"argumentos","dir":"Reference","previous_headings":"","what":"Argumentos","title":"LEE LA BASE DE DATOS ABIERTOS DE LA DIRECCION GENERAL DE EPIDEMIOLOGIA QUE YA DESCARGASTE — read_datos_abiertos","text":"user User dbConnect .e. MariaDB user password password dbConnect .e. MariaDB password dbname Database name dbConnect .e. database going stored host Host dbConnect .e. MariaDB host (usually localhost) group Group dbConnect .e. MariaDB group (can NULL) port Port connection MariaDB tblname Name table save MariaDB dict_file RData File save/read dictionary. download_dict download dictionary site.covid.dic. download_dict FALSE dict_file must specified read dictionary. download_method Methods download file (default = \"curl\"). options \"internal\", \"wininet\" (Windows) \"libcurl\", \"wget\", \"curl\". See download.file / Metodos para descargar el archivo (default = \"curl\"). Otras opciones incluyen \"interno\",\"wininet\" (Windows) \" libcurl\", \"wget\", \"curl\". Vease download.file. save_dict downloaded dictionary saved file dict_file file_download_dictionary Name file save dictionary / Nombre del archivo donde guardar el diccioanrio. remove_zip_after_download downloaded zip file saved / Si los archivos zip descargados deben ser almacenados. site.covid.dic Site download covid dictionary data","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/read_datos_abiertos.html","id":"valor","dir":"Reference","previous_headings":"","what":"Valor","title":"LEE LA BASE DE DATOS ABIERTOS DE LA DIRECCION GENERAL DE EPIDEMIOLOGIA QUE YA DESCARGASTE — read_datos_abiertos","text":"List values: dats - Database table (MARIADB) database tibble (tibble) con - Database connection (MARIADB) NULL (tibble) dict - List tibbles containing whole dictionary","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/read_datos_abiertos.html","id":"detalles","dir":"Reference","previous_headings":"","what":"Detalles","title":"LEE LA BASE DE DATOS ABIERTOS DE LA DIRECCION GENERAL DE EPIDEMIOLOGIA QUE YA DESCARGASTE — read_datos_abiertos","text":"official product / este es un producto oficial Spanish Necesitas tener una instalación funcionando de MariaDB. El programa se encarga de leer la base de datos de la DGE que bajamos con descarga_datos_abiertos. Basta con leer la tabla de nombre covidmx dentro de tu database dbname. Asegúrate de que tu usuario user tenga permisos de lectura. Para más información sobre instalación y uso de MariaDB consulta la viñeta rellenar.","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/read_datos_abiertos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Ejemplos","title":"LEE LA BASE DE DATOS ABIERTOS DE LA DIRECCION GENERAL DE EPIDEMIOLOGIA QUE YA DESCARGASTE — read_datos_abiertos","text":"","code":"if (FALSE) { datos_covid <- read_datos_abiertos() }"},{"path":"https://rodrigozepeda.github.io/covidmx/reference/rt.html","id":null,"dir":"Reference","previous_headings":"","what":"RT: Número efectivo de reproducción — rt","title":"RT: Número efectivo de reproducción — rt","text":"rt Calcula el número efectivo de reproducción por fecha y entidad","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/rt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"RT: Número efectivo de reproducción — rt","text":"","code":"rt(   datos_covid = NULL,   entidades = c(\"AGUASCALIENTES\", \"BAJA CALIFORNIA\", \"BAJA CALIFORNIA SUR\", \"CAMPECHE\",     \"CHIAPAS\", \"CHIHUAHUA\", \"CIUDAD DE MÉXICO\", \"COAHUILA DE ZARAGOZA\", \"COLIMA\",     \"DURANGO\", \"GUANAJUATO\", \"GUERRERO\", \"HIDALGO\", \"JALISCO\", \"MÉXICO\",     \"MICHOACÁN DE OCAMPO\", \"MORELOS\", \"NAYARIT\", \"NUEVO LEÓN\", \"OAXACA\", \"PUEBLA\",     \"QUERÉTARO\", \"QUINTANA ROO\", \"SAN LUIS POTOSÍ\", \"SINALOA\", \"SONORA\", \"TABASCO\",     \"TAMAULIPAS\", \"TLAXCALA\", \"VERACRUZ DE IGNACIO DE LA LLAVE\", \"YUCATÁN\", \"ZACATECAS\"),   group_by_entidad = TRUE,   entidad_tipo = c(\"Unidad Medica\", \"Residencia\", \"Nacimiento\"),   fecha_tipo = c(\"Sintomas\", \"Ingreso\", \"Defuncion\"),   tipo_clasificacion = c(\"Sospechosos\", \"Confirmados COVID\", \"Negativo a COVID\",     \"Inválido\", \"No realizado\"),   tipo_paciente = c(\"AMBULATORIO\", \"HOSPITALIZADO\", \"NO ESPECIFICADO\"),   list_name = \"rt\",   min_date = as.Date(\"2021/11/21\", format = \"%Y/%m/%d\"),   method = \"parametric_si\",   config = EpiEstim::make_config(list(mean_si = 3.5, std_si = 1.5)),   ... )"},{"path":"https://rodrigozepeda.github.io/covidmx/reference/rt.html","id":"argumentos","dir":"Reference","previous_headings":"","what":"Argumentos","title":"RT: Número efectivo de reproducción — rt","text":"datos_covid data available automatically downloads COVID-19 information. entidades Vector con las entidades de las unidades medicas analizar. Opciones: AGUASCALIENTES, BAJA CALIFORNIA, BAJA CALIFORNIA SUR, CAMPECHE, CHIAPAS, CHIHUAHUA, CIUDAD DE MEXICO, COAHUILA DE ZARAGOZA , COLIMA, DURANGO, GUANAJUATO, GUERRERO, HIDALGO, JALISCO, MEXICO, MICHOACAN DE OCAMPO, MORELOS,NAYARIT NUEVO LEON, OAXACA ,PUEBLA, QUERETARO,QUINTANA ROO, SAN LUIS POTOSI, SINALOA, SONORA, TABASCO, TAMAULIPAS,TLAXCALA, VERACRUZ DE IGNACIO DE LA LLAVE, YUCATAN, ZACATECAS group_by_entidad Si junta las entidades en una sola o bien las muestra por separado sin agrupar. entidad_tipo Selecciona Unidad Medica, Nacimiento o Residencia. por default incluye Unidad Medica fecha_tipo Selecciona Ingreso, Sintomas o Defuncion por default incluye fecha de Sintomas tipo_clasificacion Vector con el tipo de clasificaciones incluir: Sospechosos,Confirmados COVID, Negativo COVID, Inv\\u00e1lido, realizado tipo_paciente Vector con el tipo de pacientes incluir. Opciones: AMBULATORIO, HOSPITALIZADO, ESPECIFICADO list_name Asigna un nombre en la lista de datos la base generada min_date Mínima fecha partir de la cual estimar el RT method Method estimating RT EpiEstim::estimate_R config Configuration estimating RT EpiEstim::estimate_R ... Parámetros adicionales para EpiEstim::estimate_R.","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/rt.html","id":"valor","dir":"Reference","previous_headings":"","what":"Valor","title":"RT: Número efectivo de reproducción — rt","text":"Appends la lista de datos_covid una nueva entrada de nombre list_name (default: casos) con una base de datos (tibble) con los resultados agregados. positividad - Base de datos generara con los datos agregados (el nombre cambia si se usa list_name). dict - Diccionario de datos dats - Datos originales (conexion DB) disconnect  - Funcion para desconectarte de DB","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/rt.html","id":"detalles","dir":"Reference","previous_headings":"","what":"Detalles","title":"RT: Número efectivo de reproducción — rt","text":"Por default calcula el número efectivo de reproducción por estado official product / este es un producto oficial","code":""},{"path":"https://rodrigozepeda.github.io/covidmx/reference/rt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Ejemplos","title":"RT: Número efectivo de reproducción — rt","text":"","code":"if (FALSE) { datos_covid <- descarga_datos_abiertos(language = \"Espanol\")  #Casos a nivel nacional en los confirmados datos_covid <- datos_covid %>%         rt(tipo_clasificacion == \"Confirmados COVID\",           group_by_entidad = FALSE)  #Casos en AGS, CHI en los confirmados datos_covid <- datos_covid %>%         rt(entidades = c(\"CHIHUAHUA\",\"AGUASCALIENTES\"),           tipo_clasificacion == \"Confirmados COVID\",           group_by_entidad = TRUE) }"}]
